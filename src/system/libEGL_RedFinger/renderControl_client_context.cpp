// Generated Code - DO NOT EDIT !!
// generated by 'emugen'


#include <string.h>
#include "renderControl_client_context.h"


#include <stdio.h>

int renderControl_client_context_t::initDispatchByName(void *(*getProc)(const char *, void *userData), void *userData)
{
	void *ptr;

	ptr = getProc("rcGetRendererVersion", userData); if(ptr) set_rcGetRendererVersion((rcGetRendererVersion_client_proc_t)ptr);
	ptr = getProc("rcGetEGLVersion", userData); if(ptr) set_rcGetEGLVersion((rcGetEGLVersion_client_proc_t)ptr);
	ptr = getProc("rcQueryEGLString", userData); if(ptr) set_rcQueryEGLString((rcQueryEGLString_client_proc_t)ptr);
	ptr = getProc("rcGetGLString", userData); if(ptr) set_rcGetGLString((rcGetGLString_client_proc_t)ptr);
	ptr = getProc("rcGetNumConfigs", userData); if(ptr) set_rcGetNumConfigs((rcGetNumConfigs_client_proc_t)ptr);
	ptr = getProc("rcGetConfigs", userData); if(ptr) set_rcGetConfigs((rcGetConfigs_client_proc_t)ptr);
	ptr = getProc("rcChooseConfig", userData); if(ptr) set_rcChooseConfig((rcChooseConfig_client_proc_t)ptr);
	ptr = getProc("rcGetFBParam", userData); if(ptr) set_rcGetFBParam((rcGetFBParam_client_proc_t)ptr);
	ptr = getProc("rcCreateContext", userData); if(ptr) set_rcCreateContext((rcCreateContext_client_proc_t)ptr);
	ptr = getProc("rcDestroyContext", userData); if(ptr) set_rcDestroyContext((rcDestroyContext_client_proc_t)ptr);
	ptr = getProc("rcCreateWindowSurface", userData); if(ptr) set_rcCreateWindowSurface((rcCreateWindowSurface_client_proc_t)ptr);
	ptr = getProc("rcDestroyWindowSurface", userData); if(ptr) set_rcDestroyWindowSurface((rcDestroyWindowSurface_client_proc_t)ptr);
	ptr = getProc("rcCreateColorBuffer", userData); if(ptr) set_rcCreateColorBuffer((rcCreateColorBuffer_client_proc_t)ptr);
	ptr = getProc("rcOpenColorBuffer", userData); if(ptr) set_rcOpenColorBuffer((rcOpenColorBuffer_client_proc_t)ptr);
	ptr = getProc("rcCloseColorBuffer", userData); if(ptr) set_rcCloseColorBuffer((rcCloseColorBuffer_client_proc_t)ptr);
	ptr = getProc("rcSetWindowColorBuffer", userData); if(ptr) set_rcSetWindowColorBuffer((rcSetWindowColorBuffer_client_proc_t)ptr);
	ptr = getProc("rcFlushWindowColorBuffer", userData); if(ptr) set_rcFlushWindowColorBuffer((rcFlushWindowColorBuffer_client_proc_t)ptr);
	ptr = getProc("rcMakeCurrent", userData); if(ptr) set_rcMakeCurrent((rcMakeCurrent_client_proc_t)ptr);
	ptr = getProc("rcFBPost", userData); if(ptr) set_rcFBPost((rcFBPost_client_proc_t)ptr);
	ptr = getProc("rcFBSetSwapInterval", userData); if(ptr) set_rcFBSetSwapInterval((rcFBSetSwapInterval_client_proc_t)ptr);
	ptr = getProc("rcBindTexture", userData); if(ptr) set_rcBindTexture((rcBindTexture_client_proc_t)ptr);
	ptr = getProc("rcBindRenderbuffer", userData); if(ptr) set_rcBindRenderbuffer((rcBindRenderbuffer_client_proc_t)ptr);
	ptr = getProc("rcColorBufferCacheFlush", userData); if(ptr) set_rcColorBufferCacheFlush((rcColorBufferCacheFlush_client_proc_t)ptr);
	ptr = getProc("rcReadColorBuffer", userData); if(ptr) set_rcReadColorBuffer((rcReadColorBuffer_client_proc_t)ptr);
	ptr = getProc("rcUpdateColorBuffer", userData); if(ptr) set_rcUpdateColorBuffer((rcUpdateColorBuffer_client_proc_t)ptr);
	ptr = getProc("rcOpenColorBuffer2", userData); if(ptr) set_rcOpenColorBuffer2((rcOpenColorBuffer2_client_proc_t)ptr);
	ptr = getProc("rcCreateClientImage", userData); if(ptr) set_rcCreateClientImage((rcCreateClientImage_client_proc_t)ptr);
	ptr = getProc("rcDestroyClientImage", userData); if(ptr) set_rcDestroyClientImage((rcDestroyClientImage_client_proc_t)ptr);
	ptr = getProc("rcSelectChecksumHelper", userData); if(ptr) set_rcSelectChecksumHelper((rcSelectChecksumHelper_client_proc_t)ptr);
	ptr = getProc("rcCreateSyncKHR", userData); if(ptr) set_rcCreateSyncKHR((rcCreateSyncKHR_client_proc_t)ptr);
	ptr = getProc("rcClientWaitSyncKHR", userData); if(ptr) set_rcClientWaitSyncKHR((rcClientWaitSyncKHR_client_proc_t)ptr);
	ptr = getProc("rcFlushWindowColorBufferAsync", userData); if(ptr) set_rcFlushWindowColorBufferAsync((rcFlushWindowColorBufferAsync_client_proc_t)ptr);
	ptr = getProc("rcDestroySyncKHR", userData); if(ptr) set_rcDestroySyncKHR((rcDestroySyncKHR_client_proc_t)ptr);
	ptr = getProc("rcSetPuid", userData); if(ptr) set_rcSetPuid((rcSetPuid_client_proc_t)ptr);
	ptr = getProc("rcUpdateColorBufferDMA", userData); if(ptr) set_rcUpdateColorBufferDMA((rcUpdateColorBufferDMA_client_proc_t)ptr);
	ptr = getProc("rcCreateColorBufferDMA", userData); if(ptr) set_rcCreateColorBufferDMA((rcCreateColorBufferDMA_client_proc_t)ptr);
	return 0;
}

