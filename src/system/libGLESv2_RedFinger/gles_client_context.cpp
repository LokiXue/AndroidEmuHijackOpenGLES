// Generated Code - DO NOT EDIT !!
// generated by 'emugen'


#include <string.h>
#include "gles_client_context.h"


#include <stdio.h>

int gles_client_context_t::initDispatchByName(void *(*getProc)(const char *, void *userData), void *userData)
{
	void *ptr;

	ptr = getProc("glActiveTexture", userData); if(ptr) set_glActiveTexture((glActiveTexture_client_proc_t)ptr);
	ptr = getProc("glAttachShader", userData); if(ptr) set_glAttachShader((glAttachShader_client_proc_t)ptr);
	ptr = getProc("glBindAttribLocation", userData); if(ptr) set_glBindAttribLocation((glBindAttribLocation_client_proc_t)ptr);
	ptr = getProc("glBindBuffer", userData); if(ptr) set_glBindBuffer((glBindBuffer_client_proc_t)ptr);
	ptr = getProc("glBindFramebuffer", userData); if(ptr) set_glBindFramebuffer((glBindFramebuffer_client_proc_t)ptr);
	ptr = getProc("glBindRenderbuffer", userData); if(ptr) set_glBindRenderbuffer((glBindRenderbuffer_client_proc_t)ptr);
	ptr = getProc("glBindTexture", userData); if(ptr) set_glBindTexture((glBindTexture_client_proc_t)ptr);
	ptr = getProc("glBlendColor", userData); if(ptr) set_glBlendColor((glBlendColor_client_proc_t)ptr);
	ptr = getProc("glBlendEquation", userData); if(ptr) set_glBlendEquation((glBlendEquation_client_proc_t)ptr);
	ptr = getProc("glBlendEquationSeparate", userData); if(ptr) set_glBlendEquationSeparate((glBlendEquationSeparate_client_proc_t)ptr);
	ptr = getProc("glBlendFunc", userData); if(ptr) set_glBlendFunc((glBlendFunc_client_proc_t)ptr);
	ptr = getProc("glBlendFuncSeparate", userData); if(ptr) set_glBlendFuncSeparate((glBlendFuncSeparate_client_proc_t)ptr);
	ptr = getProc("glBufferData", userData); if(ptr) set_glBufferData((glBufferData_client_proc_t)ptr);
	ptr = getProc("glBufferSubData", userData); if(ptr) set_glBufferSubData((glBufferSubData_client_proc_t)ptr);
	ptr = getProc("glCheckFramebufferStatus", userData); if(ptr) set_glCheckFramebufferStatus((glCheckFramebufferStatus_client_proc_t)ptr);
	ptr = getProc("glClear", userData); if(ptr) set_glClear((glClear_client_proc_t)ptr);
	ptr = getProc("glClearColor", userData); if(ptr) set_glClearColor((glClearColor_client_proc_t)ptr);
	ptr = getProc("glClearDepthf", userData); if(ptr) set_glClearDepthf((glClearDepthf_client_proc_t)ptr);
	ptr = getProc("glClearStencil", userData); if(ptr) set_glClearStencil((glClearStencil_client_proc_t)ptr);
	ptr = getProc("glColorMask", userData); if(ptr) set_glColorMask((glColorMask_client_proc_t)ptr);
	ptr = getProc("glCompileShader", userData); if(ptr) set_glCompileShader((glCompileShader_client_proc_t)ptr);
	ptr = getProc("glCompressedTexImage2D", userData); if(ptr) set_glCompressedTexImage2D((glCompressedTexImage2D_client_proc_t)ptr);
	ptr = getProc("glCompressedTexSubImage2D", userData); if(ptr) set_glCompressedTexSubImage2D((glCompressedTexSubImage2D_client_proc_t)ptr);
	ptr = getProc("glCopyTexImage2D", userData); if(ptr) set_glCopyTexImage2D((glCopyTexImage2D_client_proc_t)ptr);
	ptr = getProc("glCopyTexSubImage2D", userData); if(ptr) set_glCopyTexSubImage2D((glCopyTexSubImage2D_client_proc_t)ptr);
	ptr = getProc("glCreateProgram", userData); if(ptr) set_glCreateProgram((glCreateProgram_client_proc_t)ptr);
	ptr = getProc("glCreateShader", userData); if(ptr) set_glCreateShader((glCreateShader_client_proc_t)ptr);
	ptr = getProc("glCullFace", userData); if(ptr) set_glCullFace((glCullFace_client_proc_t)ptr);
	ptr = getProc("glDeleteBuffers", userData); if(ptr) set_glDeleteBuffers((glDeleteBuffers_client_proc_t)ptr);
	ptr = getProc("glDeleteFramebuffers", userData); if(ptr) set_glDeleteFramebuffers((glDeleteFramebuffers_client_proc_t)ptr);
	ptr = getProc("glDeleteProgram", userData); if(ptr) set_glDeleteProgram((glDeleteProgram_client_proc_t)ptr);
	ptr = getProc("glDeleteRenderbuffers", userData); if(ptr) set_glDeleteRenderbuffers((glDeleteRenderbuffers_client_proc_t)ptr);
	ptr = getProc("glDeleteShader", userData); if(ptr) set_glDeleteShader((glDeleteShader_client_proc_t)ptr);
	ptr = getProc("glDeleteTextures", userData); if(ptr) set_glDeleteTextures((glDeleteTextures_client_proc_t)ptr);
	ptr = getProc("glDepthFunc", userData); if(ptr) set_glDepthFunc((glDepthFunc_client_proc_t)ptr);
	ptr = getProc("glDepthMask", userData); if(ptr) set_glDepthMask((glDepthMask_client_proc_t)ptr);
	ptr = getProc("glDepthRangef", userData); if(ptr) set_glDepthRangef((glDepthRangef_client_proc_t)ptr);
	ptr = getProc("glDetachShader", userData); if(ptr) set_glDetachShader((glDetachShader_client_proc_t)ptr);
	ptr = getProc("glDisable", userData); if(ptr) set_glDisable((glDisable_client_proc_t)ptr);
	ptr = getProc("glDisableVertexAttribArray", userData); if(ptr) set_glDisableVertexAttribArray((glDisableVertexAttribArray_client_proc_t)ptr);
	ptr = getProc("glDrawArrays", userData); if(ptr) set_glDrawArrays((glDrawArrays_client_proc_t)ptr);
	ptr = getProc("glDrawElements", userData); if(ptr) set_glDrawElements((glDrawElements_client_proc_t)ptr);
	ptr = getProc("glEnable", userData); if(ptr) set_glEnable((glEnable_client_proc_t)ptr);
	ptr = getProc("glEnableVertexAttribArray", userData); if(ptr) set_glEnableVertexAttribArray((glEnableVertexAttribArray_client_proc_t)ptr);
	ptr = getProc("glFinish", userData); if(ptr) set_glFinish((glFinish_client_proc_t)ptr);
	ptr = getProc("glFlush", userData); if(ptr) set_glFlush((glFlush_client_proc_t)ptr);
	ptr = getProc("glFramebufferRenderbuffer", userData); if(ptr) set_glFramebufferRenderbuffer((glFramebufferRenderbuffer_client_proc_t)ptr);
	ptr = getProc("glFramebufferTexture2D", userData); if(ptr) set_glFramebufferTexture2D((glFramebufferTexture2D_client_proc_t)ptr);
	ptr = getProc("glFrontFace", userData); if(ptr) set_glFrontFace((glFrontFace_client_proc_t)ptr);
	ptr = getProc("glGenBuffers", userData); if(ptr) set_glGenBuffers((glGenBuffers_client_proc_t)ptr);
	ptr = getProc("glGenerateMipmap", userData); if(ptr) set_glGenerateMipmap((glGenerateMipmap_client_proc_t)ptr);
	ptr = getProc("glGenFramebuffers", userData); if(ptr) set_glGenFramebuffers((glGenFramebuffers_client_proc_t)ptr);
	ptr = getProc("glGenRenderbuffers", userData); if(ptr) set_glGenRenderbuffers((glGenRenderbuffers_client_proc_t)ptr);
	ptr = getProc("glGenTextures", userData); if(ptr) set_glGenTextures((glGenTextures_client_proc_t)ptr);
	ptr = getProc("glGetActiveAttrib", userData); if(ptr) set_glGetActiveAttrib((glGetActiveAttrib_client_proc_t)ptr);
	ptr = getProc("glGetActiveUniform", userData); if(ptr) set_glGetActiveUniform((glGetActiveUniform_client_proc_t)ptr);
	ptr = getProc("glGetAttachedShaders", userData); if(ptr) set_glGetAttachedShaders((glGetAttachedShaders_client_proc_t)ptr);
	ptr = getProc("glGetAttribLocation", userData); if(ptr) set_glGetAttribLocation((glGetAttribLocation_client_proc_t)ptr);
	ptr = getProc("glGetBooleanv", userData); if(ptr) set_glGetBooleanv((glGetBooleanv_client_proc_t)ptr);
	ptr = getProc("glGetBufferParameteriv", userData); if(ptr) set_glGetBufferParameteriv((glGetBufferParameteriv_client_proc_t)ptr);
	ptr = getProc("glGetError", userData); if(ptr) set_glGetError((glGetError_client_proc_t)ptr);
	ptr = getProc("glGetFloatv", userData); if(ptr) set_glGetFloatv((glGetFloatv_client_proc_t)ptr);
	ptr = getProc("glGetFramebufferAttachmentParameteriv", userData); if(ptr) set_glGetFramebufferAttachmentParameteriv((glGetFramebufferAttachmentParameteriv_client_proc_t)ptr);
	ptr = getProc("glGetIntegerv", userData); if(ptr) set_glGetIntegerv((glGetIntegerv_client_proc_t)ptr);
	ptr = getProc("glGetProgramiv", userData); if(ptr) set_glGetProgramiv((glGetProgramiv_client_proc_t)ptr);
	ptr = getProc("glGetProgramInfoLog", userData); if(ptr) set_glGetProgramInfoLog((glGetProgramInfoLog_client_proc_t)ptr);
	ptr = getProc("glGetRenderbufferParameteriv", userData); if(ptr) set_glGetRenderbufferParameteriv((glGetRenderbufferParameteriv_client_proc_t)ptr);
	ptr = getProc("glGetShaderiv", userData); if(ptr) set_glGetShaderiv((glGetShaderiv_client_proc_t)ptr);
	ptr = getProc("glGetShaderInfoLog", userData); if(ptr) set_glGetShaderInfoLog((glGetShaderInfoLog_client_proc_t)ptr);
	ptr = getProc("glGetShaderPrecisionFormat", userData); if(ptr) set_glGetShaderPrecisionFormat((glGetShaderPrecisionFormat_client_proc_t)ptr);
	ptr = getProc("glGetShaderSource", userData); if(ptr) set_glGetShaderSource((glGetShaderSource_client_proc_t)ptr);
	ptr = getProc("glGetString", userData); if(ptr) set_glGetString((glGetString_client_proc_t)ptr);
	ptr = getProc("glGetTexParameterfv", userData); if(ptr) set_glGetTexParameterfv((glGetTexParameterfv_client_proc_t)ptr);
	ptr = getProc("glGetTexParameteriv", userData); if(ptr) set_glGetTexParameteriv((glGetTexParameteriv_client_proc_t)ptr);
	ptr = getProc("glGetUniformfv", userData); if(ptr) set_glGetUniformfv((glGetUniformfv_client_proc_t)ptr);
	ptr = getProc("glGetUniformiv", userData); if(ptr) set_glGetUniformiv((glGetUniformiv_client_proc_t)ptr);
	ptr = getProc("glGetUniformLocation", userData); if(ptr) set_glGetUniformLocation((glGetUniformLocation_client_proc_t)ptr);
	ptr = getProc("glGetVertexAttribfv", userData); if(ptr) set_glGetVertexAttribfv((glGetVertexAttribfv_client_proc_t)ptr);
	ptr = getProc("glGetVertexAttribiv", userData); if(ptr) set_glGetVertexAttribiv((glGetVertexAttribiv_client_proc_t)ptr);
	ptr = getProc("glGetVertexAttribPointerv", userData); if(ptr) set_glGetVertexAttribPointerv((glGetVertexAttribPointerv_client_proc_t)ptr);
	ptr = getProc("glHint", userData); if(ptr) set_glHint((glHint_client_proc_t)ptr);
	ptr = getProc("glIsBuffer", userData); if(ptr) set_glIsBuffer((glIsBuffer_client_proc_t)ptr);
	ptr = getProc("glIsEnabled", userData); if(ptr) set_glIsEnabled((glIsEnabled_client_proc_t)ptr);
	ptr = getProc("glIsFramebuffer", userData); if(ptr) set_glIsFramebuffer((glIsFramebuffer_client_proc_t)ptr);
	ptr = getProc("glIsProgram", userData); if(ptr) set_glIsProgram((glIsProgram_client_proc_t)ptr);
	ptr = getProc("glIsRenderbuffer", userData); if(ptr) set_glIsRenderbuffer((glIsRenderbuffer_client_proc_t)ptr);
	ptr = getProc("glIsShader", userData); if(ptr) set_glIsShader((glIsShader_client_proc_t)ptr);
	ptr = getProc("glIsTexture", userData); if(ptr) set_glIsTexture((glIsTexture_client_proc_t)ptr);
	ptr = getProc("glLineWidth", userData); if(ptr) set_glLineWidth((glLineWidth_client_proc_t)ptr);
	ptr = getProc("glLinkProgram", userData); if(ptr) set_glLinkProgram((glLinkProgram_client_proc_t)ptr);
	ptr = getProc("glPixelStorei", userData); if(ptr) set_glPixelStorei((glPixelStorei_client_proc_t)ptr);
	ptr = getProc("glPolygonOffset", userData); if(ptr) set_glPolygonOffset((glPolygonOffset_client_proc_t)ptr);
	ptr = getProc("glReadPixels", userData); if(ptr) set_glReadPixels((glReadPixels_client_proc_t)ptr);
	ptr = getProc("glReleaseShaderCompiler", userData); if(ptr) set_glReleaseShaderCompiler((glReleaseShaderCompiler_client_proc_t)ptr);
	ptr = getProc("glRenderbufferStorage", userData); if(ptr) set_glRenderbufferStorage((glRenderbufferStorage_client_proc_t)ptr);
	ptr = getProc("glSampleCoverage", userData); if(ptr) set_glSampleCoverage((glSampleCoverage_client_proc_t)ptr);
	ptr = getProc("glScissor", userData); if(ptr) set_glScissor((glScissor_client_proc_t)ptr);
	ptr = getProc("glShaderBinary", userData); if(ptr) set_glShaderBinary((glShaderBinary_client_proc_t)ptr);
	ptr = getProc("glShaderSource", userData); if(ptr) set_glShaderSource((glShaderSource_client_proc_t)ptr);
	ptr = getProc("glStencilFunc", userData); if(ptr) set_glStencilFunc((glStencilFunc_client_proc_t)ptr);
	ptr = getProc("glStencilFuncSeparate", userData); if(ptr) set_glStencilFuncSeparate((glStencilFuncSeparate_client_proc_t)ptr);
	ptr = getProc("glStencilMask", userData); if(ptr) set_glStencilMask((glStencilMask_client_proc_t)ptr);
	ptr = getProc("glStencilMaskSeparate", userData); if(ptr) set_glStencilMaskSeparate((glStencilMaskSeparate_client_proc_t)ptr);
	ptr = getProc("glStencilOp", userData); if(ptr) set_glStencilOp((glStencilOp_client_proc_t)ptr);
	ptr = getProc("glStencilOpSeparate", userData); if(ptr) set_glStencilOpSeparate((glStencilOpSeparate_client_proc_t)ptr);
	ptr = getProc("glTexImage2D", userData); if(ptr) set_glTexImage2D((glTexImage2D_client_proc_t)ptr);
	ptr = getProc("glTexParameterf", userData); if(ptr) set_glTexParameterf((glTexParameterf_client_proc_t)ptr);
	ptr = getProc("glTexParameterfv", userData); if(ptr) set_glTexParameterfv((glTexParameterfv_client_proc_t)ptr);
	ptr = getProc("glTexParameteri", userData); if(ptr) set_glTexParameteri((glTexParameteri_client_proc_t)ptr);
	ptr = getProc("glTexParameteriv", userData); if(ptr) set_glTexParameteriv((glTexParameteriv_client_proc_t)ptr);
	ptr = getProc("glTexSubImage2D", userData); if(ptr) set_glTexSubImage2D((glTexSubImage2D_client_proc_t)ptr);
	ptr = getProc("glUniform1f", userData); if(ptr) set_glUniform1f((glUniform1f_client_proc_t)ptr);
	ptr = getProc("glUniform1fv", userData); if(ptr) set_glUniform1fv((glUniform1fv_client_proc_t)ptr);
	ptr = getProc("glUniform1i", userData); if(ptr) set_glUniform1i((glUniform1i_client_proc_t)ptr);
	ptr = getProc("glUniform1iv", userData); if(ptr) set_glUniform1iv((glUniform1iv_client_proc_t)ptr);
	ptr = getProc("glUniform2f", userData); if(ptr) set_glUniform2f((glUniform2f_client_proc_t)ptr);
	ptr = getProc("glUniform2fv", userData); if(ptr) set_glUniform2fv((glUniform2fv_client_proc_t)ptr);
	ptr = getProc("glUniform2i", userData); if(ptr) set_glUniform2i((glUniform2i_client_proc_t)ptr);
	ptr = getProc("glUniform2iv", userData); if(ptr) set_glUniform2iv((glUniform2iv_client_proc_t)ptr);
	ptr = getProc("glUniform3f", userData); if(ptr) set_glUniform3f((glUniform3f_client_proc_t)ptr);
	ptr = getProc("glUniform3fv", userData); if(ptr) set_glUniform3fv((glUniform3fv_client_proc_t)ptr);
	ptr = getProc("glUniform3i", userData); if(ptr) set_glUniform3i((glUniform3i_client_proc_t)ptr);
	ptr = getProc("glUniform3iv", userData); if(ptr) set_glUniform3iv((glUniform3iv_client_proc_t)ptr);
	ptr = getProc("glUniform4f", userData); if(ptr) set_glUniform4f((glUniform4f_client_proc_t)ptr);
	ptr = getProc("glUniform4fv", userData); if(ptr) set_glUniform4fv((glUniform4fv_client_proc_t)ptr);
	ptr = getProc("glUniform4i", userData); if(ptr) set_glUniform4i((glUniform4i_client_proc_t)ptr);
	ptr = getProc("glUniform4iv", userData); if(ptr) set_glUniform4iv((glUniform4iv_client_proc_t)ptr);
	ptr = getProc("glUniformMatrix2fv", userData); if(ptr) set_glUniformMatrix2fv((glUniformMatrix2fv_client_proc_t)ptr);
	ptr = getProc("glUniformMatrix3fv", userData); if(ptr) set_glUniformMatrix3fv((glUniformMatrix3fv_client_proc_t)ptr);
	ptr = getProc("glUniformMatrix4fv", userData); if(ptr) set_glUniformMatrix4fv((glUniformMatrix4fv_client_proc_t)ptr);
	ptr = getProc("glUseProgram", userData); if(ptr) set_glUseProgram((glUseProgram_client_proc_t)ptr);
	ptr = getProc("glValidateProgram", userData); if(ptr) set_glValidateProgram((glValidateProgram_client_proc_t)ptr);
	ptr = getProc("glVertexAttrib1f", userData); if(ptr) set_glVertexAttrib1f((glVertexAttrib1f_client_proc_t)ptr);
	ptr = getProc("glVertexAttrib1fv", userData); if(ptr) set_glVertexAttrib1fv((glVertexAttrib1fv_client_proc_t)ptr);
	ptr = getProc("glVertexAttrib2f", userData); if(ptr) set_glVertexAttrib2f((glVertexAttrib2f_client_proc_t)ptr);
	ptr = getProc("glVertexAttrib2fv", userData); if(ptr) set_glVertexAttrib2fv((glVertexAttrib2fv_client_proc_t)ptr);
	ptr = getProc("glVertexAttrib3f", userData); if(ptr) set_glVertexAttrib3f((glVertexAttrib3f_client_proc_t)ptr);
	ptr = getProc("glVertexAttrib3fv", userData); if(ptr) set_glVertexAttrib3fv((glVertexAttrib3fv_client_proc_t)ptr);
	ptr = getProc("glVertexAttrib4f", userData); if(ptr) set_glVertexAttrib4f((glVertexAttrib4f_client_proc_t)ptr);
	ptr = getProc("glVertexAttrib4fv", userData); if(ptr) set_glVertexAttrib4fv((glVertexAttrib4fv_client_proc_t)ptr);
	ptr = getProc("glVertexAttribPointer", userData); if(ptr) set_glVertexAttribPointer((glVertexAttribPointer_client_proc_t)ptr);
	ptr = getProc("glViewport", userData); if(ptr) set_glViewport((glViewport_client_proc_t)ptr);
	ptr = getProc("glEGLImageTargetTexture2DOES", userData); if(ptr) set_glEGLImageTargetTexture2DOES((glEGLImageTargetTexture2DOES_client_proc_t)ptr);
	ptr = getProc("glEGLImageTargetRenderbufferStorageOES", userData); if(ptr) set_glEGLImageTargetRenderbufferStorageOES((glEGLImageTargetRenderbufferStorageOES_client_proc_t)ptr);
	ptr = getProc("glGetProgramBinaryOES", userData); if(ptr) set_glGetProgramBinaryOES((glGetProgramBinaryOES_client_proc_t)ptr);
	ptr = getProc("glProgramBinaryOES", userData); if(ptr) set_glProgramBinaryOES((glProgramBinaryOES_client_proc_t)ptr);
	ptr = getProc("glMapBufferOES", userData); if(ptr) set_glMapBufferOES((glMapBufferOES_client_proc_t)ptr);
	ptr = getProc("glUnmapBufferOES", userData); if(ptr) set_glUnmapBufferOES((glUnmapBufferOES_client_proc_t)ptr);
	ptr = getProc("glTexImage3DOES", userData); if(ptr) set_glTexImage3DOES((glTexImage3DOES_client_proc_t)ptr);
	ptr = getProc("glTexSubImage3DOES", userData); if(ptr) set_glTexSubImage3DOES((glTexSubImage3DOES_client_proc_t)ptr);
	ptr = getProc("glCopyTexSubImage3DOES", userData); if(ptr) set_glCopyTexSubImage3DOES((glCopyTexSubImage3DOES_client_proc_t)ptr);
	ptr = getProc("glCompressedTexImage3DOES", userData); if(ptr) set_glCompressedTexImage3DOES((glCompressedTexImage3DOES_client_proc_t)ptr);
	ptr = getProc("glCompressedTexSubImage3DOES", userData); if(ptr) set_glCompressedTexSubImage3DOES((glCompressedTexSubImage3DOES_client_proc_t)ptr);
	ptr = getProc("glFramebufferTexture3DOES", userData); if(ptr) set_glFramebufferTexture3DOES((glFramebufferTexture3DOES_client_proc_t)ptr);
	ptr = getProc("glBindVertexArrayOES", userData); if(ptr) set_glBindVertexArrayOES((glBindVertexArrayOES_client_proc_t)ptr);
	ptr = getProc("glDeleteVertexArraysOES", userData); if(ptr) set_glDeleteVertexArraysOES((glDeleteVertexArraysOES_client_proc_t)ptr);
	ptr = getProc("glGenVertexArraysOES", userData); if(ptr) set_glGenVertexArraysOES((glGenVertexArraysOES_client_proc_t)ptr);
	ptr = getProc("glIsVertexArrayOES", userData); if(ptr) set_glIsVertexArrayOES((glIsVertexArrayOES_client_proc_t)ptr);
	ptr = getProc("glDiscardFramebufferEXT", userData); if(ptr) set_glDiscardFramebufferEXT((glDiscardFramebufferEXT_client_proc_t)ptr);
	ptr = getProc("glMultiDrawArraysEXT", userData); if(ptr) set_glMultiDrawArraysEXT((glMultiDrawArraysEXT_client_proc_t)ptr);
	ptr = getProc("glMultiDrawElementsEXT", userData); if(ptr) set_glMultiDrawElementsEXT((glMultiDrawElementsEXT_client_proc_t)ptr);
	ptr = getProc("glGetPerfMonitorGroupsAMD", userData); if(ptr) set_glGetPerfMonitorGroupsAMD((glGetPerfMonitorGroupsAMD_client_proc_t)ptr);
	ptr = getProc("glGetPerfMonitorCountersAMD", userData); if(ptr) set_glGetPerfMonitorCountersAMD((glGetPerfMonitorCountersAMD_client_proc_t)ptr);
	ptr = getProc("glGetPerfMonitorGroupStringAMD", userData); if(ptr) set_glGetPerfMonitorGroupStringAMD((glGetPerfMonitorGroupStringAMD_client_proc_t)ptr);
	ptr = getProc("glGetPerfMonitorCounterStringAMD", userData); if(ptr) set_glGetPerfMonitorCounterStringAMD((glGetPerfMonitorCounterStringAMD_client_proc_t)ptr);
	ptr = getProc("glGetPerfMonitorCounterInfoAMD", userData); if(ptr) set_glGetPerfMonitorCounterInfoAMD((glGetPerfMonitorCounterInfoAMD_client_proc_t)ptr);
	ptr = getProc("glGenPerfMonitorsAMD", userData); if(ptr) set_glGenPerfMonitorsAMD((glGenPerfMonitorsAMD_client_proc_t)ptr);
	ptr = getProc("glDeletePerfMonitorsAMD", userData); if(ptr) set_glDeletePerfMonitorsAMD((glDeletePerfMonitorsAMD_client_proc_t)ptr);
	ptr = getProc("glSelectPerfMonitorCountersAMD", userData); if(ptr) set_glSelectPerfMonitorCountersAMD((glSelectPerfMonitorCountersAMD_client_proc_t)ptr);
	ptr = getProc("glBeginPerfMonitorAMD", userData); if(ptr) set_glBeginPerfMonitorAMD((glBeginPerfMonitorAMD_client_proc_t)ptr);
	ptr = getProc("glEndPerfMonitorAMD", userData); if(ptr) set_glEndPerfMonitorAMD((glEndPerfMonitorAMD_client_proc_t)ptr);
	ptr = getProc("glGetPerfMonitorCounterDataAMD", userData); if(ptr) set_glGetPerfMonitorCounterDataAMD((glGetPerfMonitorCounterDataAMD_client_proc_t)ptr);
	ptr = getProc("glRenderbufferStorageMultisampleIMG", userData); if(ptr) set_glRenderbufferStorageMultisampleIMG((glRenderbufferStorageMultisampleIMG_client_proc_t)ptr);
	ptr = getProc("glFramebufferTexture2DMultisampleIMG", userData); if(ptr) set_glFramebufferTexture2DMultisampleIMG((glFramebufferTexture2DMultisampleIMG_client_proc_t)ptr);
	ptr = getProc("glDeleteFencesNV", userData); if(ptr) set_glDeleteFencesNV((glDeleteFencesNV_client_proc_t)ptr);
	ptr = getProc("glGenFencesNV", userData); if(ptr) set_glGenFencesNV((glGenFencesNV_client_proc_t)ptr);
	ptr = getProc("glIsFenceNV", userData); if(ptr) set_glIsFenceNV((glIsFenceNV_client_proc_t)ptr);
	ptr = getProc("glTestFenceNV", userData); if(ptr) set_glTestFenceNV((glTestFenceNV_client_proc_t)ptr);
	ptr = getProc("glGetFenceivNV", userData); if(ptr) set_glGetFenceivNV((glGetFenceivNV_client_proc_t)ptr);
	ptr = getProc("glFinishFenceNV", userData); if(ptr) set_glFinishFenceNV((glFinishFenceNV_client_proc_t)ptr);
	ptr = getProc("glSetFenceNV", userData); if(ptr) set_glSetFenceNV((glSetFenceNV_client_proc_t)ptr);
	ptr = getProc("glCoverageMaskNV", userData); if(ptr) set_glCoverageMaskNV((glCoverageMaskNV_client_proc_t)ptr);
	ptr = getProc("glCoverageOperationNV", userData); if(ptr) set_glCoverageOperationNV((glCoverageOperationNV_client_proc_t)ptr);
	ptr = getProc("glGetDriverControlsQCOM", userData); if(ptr) set_glGetDriverControlsQCOM((glGetDriverControlsQCOM_client_proc_t)ptr);
	ptr = getProc("glGetDriverControlStringQCOM", userData); if(ptr) set_glGetDriverControlStringQCOM((glGetDriverControlStringQCOM_client_proc_t)ptr);
	ptr = getProc("glEnableDriverControlQCOM", userData); if(ptr) set_glEnableDriverControlQCOM((glEnableDriverControlQCOM_client_proc_t)ptr);
	ptr = getProc("glDisableDriverControlQCOM", userData); if(ptr) set_glDisableDriverControlQCOM((glDisableDriverControlQCOM_client_proc_t)ptr);
	ptr = getProc("glExtGetTexturesQCOM", userData); if(ptr) set_glExtGetTexturesQCOM((glExtGetTexturesQCOM_client_proc_t)ptr);
	ptr = getProc("glExtGetBuffersQCOM", userData); if(ptr) set_glExtGetBuffersQCOM((glExtGetBuffersQCOM_client_proc_t)ptr);
	ptr = getProc("glExtGetRenderbuffersQCOM", userData); if(ptr) set_glExtGetRenderbuffersQCOM((glExtGetRenderbuffersQCOM_client_proc_t)ptr);
	ptr = getProc("glExtGetFramebuffersQCOM", userData); if(ptr) set_glExtGetFramebuffersQCOM((glExtGetFramebuffersQCOM_client_proc_t)ptr);
	ptr = getProc("glExtGetTexLevelParameterivQCOM", userData); if(ptr) set_glExtGetTexLevelParameterivQCOM((glExtGetTexLevelParameterivQCOM_client_proc_t)ptr);
	ptr = getProc("glExtTexObjectStateOverrideiQCOM", userData); if(ptr) set_glExtTexObjectStateOverrideiQCOM((glExtTexObjectStateOverrideiQCOM_client_proc_t)ptr);
	ptr = getProc("glExtGetTexSubImageQCOM", userData); if(ptr) set_glExtGetTexSubImageQCOM((glExtGetTexSubImageQCOM_client_proc_t)ptr);
	ptr = getProc("glExtGetBufferPointervQCOM", userData); if(ptr) set_glExtGetBufferPointervQCOM((glExtGetBufferPointervQCOM_client_proc_t)ptr);
	ptr = getProc("glExtGetShadersQCOM", userData); if(ptr) set_glExtGetShadersQCOM((glExtGetShadersQCOM_client_proc_t)ptr);
	ptr = getProc("glExtGetProgramsQCOM", userData); if(ptr) set_glExtGetProgramsQCOM((glExtGetProgramsQCOM_client_proc_t)ptr);
	ptr = getProc("glExtIsProgramBinaryQCOM", userData); if(ptr) set_glExtIsProgramBinaryQCOM((glExtIsProgramBinaryQCOM_client_proc_t)ptr);
	ptr = getProc("glExtGetProgramBinarySourceQCOM", userData); if(ptr) set_glExtGetProgramBinarySourceQCOM((glExtGetProgramBinarySourceQCOM_client_proc_t)ptr);
	ptr = getProc("glStartTilingQCOM", userData); if(ptr) set_glStartTilingQCOM((glStartTilingQCOM_client_proc_t)ptr);
	ptr = getProc("glEndTilingQCOM", userData); if(ptr) set_glEndTilingQCOM((glEndTilingQCOM_client_proc_t)ptr);
	ptr = getProc("glVertexAttribPointerData", userData); if(ptr) set_glVertexAttribPointerData((glVertexAttribPointerData_client_proc_t)ptr);
	ptr = getProc("glVertexAttribPointerOffset", userData); if(ptr) set_glVertexAttribPointerOffset((glVertexAttribPointerOffset_client_proc_t)ptr);
	ptr = getProc("glDrawElementsOffset", userData); if(ptr) set_glDrawElementsOffset((glDrawElementsOffset_client_proc_t)ptr);
	ptr = getProc("glDrawElementsData", userData); if(ptr) set_glDrawElementsData((glDrawElementsData_client_proc_t)ptr);
	ptr = getProc("glGetCompressedTextureFormats", userData); if(ptr) set_glGetCompressedTextureFormats((glGetCompressedTextureFormats_client_proc_t)ptr);
	ptr = getProc("glShaderString", userData); if(ptr) set_glShaderString((glShaderString_client_proc_t)ptr);
	ptr = getProc("glFinishRoundTrip", userData); if(ptr) set_glFinishRoundTrip((glFinishRoundTrip_client_proc_t)ptr);
	ptr = getProc("glGenVertexArrays", userData); if(ptr) set_glGenVertexArrays((glGenVertexArrays_client_proc_t)ptr);
	ptr = getProc("glBindVertexArray", userData); if(ptr) set_glBindVertexArray((glBindVertexArray_client_proc_t)ptr);
	ptr = getProc("glDeleteVertexArrays", userData); if(ptr) set_glDeleteVertexArrays((glDeleteVertexArrays_client_proc_t)ptr);
	ptr = getProc("glIsVertexArray", userData); if(ptr) set_glIsVertexArray((glIsVertexArray_client_proc_t)ptr);
	ptr = getProc("glMapBufferRange", userData); if(ptr) set_glMapBufferRange((glMapBufferRange_client_proc_t)ptr);
	ptr = getProc("glUnmapBuffer", userData); if(ptr) set_glUnmapBuffer((glUnmapBuffer_client_proc_t)ptr);
	ptr = getProc("glFlushMappedBufferRange", userData); if(ptr) set_glFlushMappedBufferRange((glFlushMappedBufferRange_client_proc_t)ptr);
	ptr = getProc("glMapBufferRangeAEMU", userData); if(ptr) set_glMapBufferRangeAEMU((glMapBufferRangeAEMU_client_proc_t)ptr);
	ptr = getProc("glUnmapBufferAEMU", userData); if(ptr) set_glUnmapBufferAEMU((glUnmapBufferAEMU_client_proc_t)ptr);
	ptr = getProc("glFlushMappedBufferRangeAEMU", userData); if(ptr) set_glFlushMappedBufferRangeAEMU((glFlushMappedBufferRangeAEMU_client_proc_t)ptr);
	ptr = getProc("glReadPixelsOffsetAEMU", userData); if(ptr) set_glReadPixelsOffsetAEMU((glReadPixelsOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glCompressedTexImage2DOffsetAEMU", userData); if(ptr) set_glCompressedTexImage2DOffsetAEMU((glCompressedTexImage2DOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glCompressedTexSubImage2DOffsetAEMU", userData); if(ptr) set_glCompressedTexSubImage2DOffsetAEMU((glCompressedTexSubImage2DOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glTexImage2DOffsetAEMU", userData); if(ptr) set_glTexImage2DOffsetAEMU((glTexImage2DOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glTexSubImage2DOffsetAEMU", userData); if(ptr) set_glTexSubImage2DOffsetAEMU((glTexSubImage2DOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glBindBufferRange", userData); if(ptr) set_glBindBufferRange((glBindBufferRange_client_proc_t)ptr);
	ptr = getProc("glBindBufferBase", userData); if(ptr) set_glBindBufferBase((glBindBufferBase_client_proc_t)ptr);
	ptr = getProc("glCopyBufferSubData", userData); if(ptr) set_glCopyBufferSubData((glCopyBufferSubData_client_proc_t)ptr);
	ptr = getProc("glClearBufferiv", userData); if(ptr) set_glClearBufferiv((glClearBufferiv_client_proc_t)ptr);
	ptr = getProc("glClearBufferuiv", userData); if(ptr) set_glClearBufferuiv((glClearBufferuiv_client_proc_t)ptr);
	ptr = getProc("glClearBufferfv", userData); if(ptr) set_glClearBufferfv((glClearBufferfv_client_proc_t)ptr);
	ptr = getProc("glClearBufferfi", userData); if(ptr) set_glClearBufferfi((glClearBufferfi_client_proc_t)ptr);
	ptr = getProc("glGetBufferParameteri64v", userData); if(ptr) set_glGetBufferParameteri64v((glGetBufferParameteri64v_client_proc_t)ptr);
	ptr = getProc("glGetBufferPointerv", userData); if(ptr) set_glGetBufferPointerv((glGetBufferPointerv_client_proc_t)ptr);
	ptr = getProc("glUniformBlockBinding", userData); if(ptr) set_glUniformBlockBinding((glUniformBlockBinding_client_proc_t)ptr);
	ptr = getProc("glGetUniformBlockIndex", userData); if(ptr) set_glGetUniformBlockIndex((glGetUniformBlockIndex_client_proc_t)ptr);
	ptr = getProc("glGetUniformIndices", userData); if(ptr) set_glGetUniformIndices((glGetUniformIndices_client_proc_t)ptr);
	ptr = getProc("glGetUniformIndicesAEMU", userData); if(ptr) set_glGetUniformIndicesAEMU((glGetUniformIndicesAEMU_client_proc_t)ptr);
	ptr = getProc("glGetActiveUniformBlockiv", userData); if(ptr) set_glGetActiveUniformBlockiv((glGetActiveUniformBlockiv_client_proc_t)ptr);
	ptr = getProc("glGetActiveUniformBlockName", userData); if(ptr) set_glGetActiveUniformBlockName((glGetActiveUniformBlockName_client_proc_t)ptr);
	ptr = getProc("glUniform1ui", userData); if(ptr) set_glUniform1ui((glUniform1ui_client_proc_t)ptr);
	ptr = getProc("glUniform2ui", userData); if(ptr) set_glUniform2ui((glUniform2ui_client_proc_t)ptr);
	ptr = getProc("glUniform3ui", userData); if(ptr) set_glUniform3ui((glUniform3ui_client_proc_t)ptr);
	ptr = getProc("glUniform4ui", userData); if(ptr) set_glUniform4ui((glUniform4ui_client_proc_t)ptr);
	ptr = getProc("glUniform1uiv", userData); if(ptr) set_glUniform1uiv((glUniform1uiv_client_proc_t)ptr);
	ptr = getProc("glUniform2uiv", userData); if(ptr) set_glUniform2uiv((glUniform2uiv_client_proc_t)ptr);
	ptr = getProc("glUniform3uiv", userData); if(ptr) set_glUniform3uiv((glUniform3uiv_client_proc_t)ptr);
	ptr = getProc("glUniform4uiv", userData); if(ptr) set_glUniform4uiv((glUniform4uiv_client_proc_t)ptr);
	ptr = getProc("glUniformMatrix2x3fv", userData); if(ptr) set_glUniformMatrix2x3fv((glUniformMatrix2x3fv_client_proc_t)ptr);
	ptr = getProc("glUniformMatrix3x2fv", userData); if(ptr) set_glUniformMatrix3x2fv((glUniformMatrix3x2fv_client_proc_t)ptr);
	ptr = getProc("glUniformMatrix2x4fv", userData); if(ptr) set_glUniformMatrix2x4fv((glUniformMatrix2x4fv_client_proc_t)ptr);
	ptr = getProc("glUniformMatrix4x2fv", userData); if(ptr) set_glUniformMatrix4x2fv((glUniformMatrix4x2fv_client_proc_t)ptr);
	ptr = getProc("glUniformMatrix3x4fv", userData); if(ptr) set_glUniformMatrix3x4fv((glUniformMatrix3x4fv_client_proc_t)ptr);
	ptr = getProc("glUniformMatrix4x3fv", userData); if(ptr) set_glUniformMatrix4x3fv((glUniformMatrix4x3fv_client_proc_t)ptr);
	ptr = getProc("glGetUniformuiv", userData); if(ptr) set_glGetUniformuiv((glGetUniformuiv_client_proc_t)ptr);
	ptr = getProc("glGetActiveUniformsiv", userData); if(ptr) set_glGetActiveUniformsiv((glGetActiveUniformsiv_client_proc_t)ptr);
	ptr = getProc("glVertexAttribI4i", userData); if(ptr) set_glVertexAttribI4i((glVertexAttribI4i_client_proc_t)ptr);
	ptr = getProc("glVertexAttribI4ui", userData); if(ptr) set_glVertexAttribI4ui((glVertexAttribI4ui_client_proc_t)ptr);
	ptr = getProc("glVertexAttribI4iv", userData); if(ptr) set_glVertexAttribI4iv((glVertexAttribI4iv_client_proc_t)ptr);
	ptr = getProc("glVertexAttribI4uiv", userData); if(ptr) set_glVertexAttribI4uiv((glVertexAttribI4uiv_client_proc_t)ptr);
	ptr = getProc("glVertexAttribIPointer", userData); if(ptr) set_glVertexAttribIPointer((glVertexAttribIPointer_client_proc_t)ptr);
	ptr = getProc("glVertexAttribIPointerOffsetAEMU", userData); if(ptr) set_glVertexAttribIPointerOffsetAEMU((glVertexAttribIPointerOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glVertexAttribIPointerDataAEMU", userData); if(ptr) set_glVertexAttribIPointerDataAEMU((glVertexAttribIPointerDataAEMU_client_proc_t)ptr);
	ptr = getProc("glGetVertexAttribIiv", userData); if(ptr) set_glGetVertexAttribIiv((glGetVertexAttribIiv_client_proc_t)ptr);
	ptr = getProc("glGetVertexAttribIuiv", userData); if(ptr) set_glGetVertexAttribIuiv((glGetVertexAttribIuiv_client_proc_t)ptr);
	ptr = getProc("glVertexAttribDivisor", userData); if(ptr) set_glVertexAttribDivisor((glVertexAttribDivisor_client_proc_t)ptr);
	ptr = getProc("glDrawArraysInstanced", userData); if(ptr) set_glDrawArraysInstanced((glDrawArraysInstanced_client_proc_t)ptr);
	ptr = getProc("glDrawElementsInstanced", userData); if(ptr) set_glDrawElementsInstanced((glDrawElementsInstanced_client_proc_t)ptr);
	ptr = getProc("glDrawElementsInstancedDataAEMU", userData); if(ptr) set_glDrawElementsInstancedDataAEMU((glDrawElementsInstancedDataAEMU_client_proc_t)ptr);
	ptr = getProc("glDrawElementsInstancedOffsetAEMU", userData); if(ptr) set_glDrawElementsInstancedOffsetAEMU((glDrawElementsInstancedOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glDrawRangeElements", userData); if(ptr) set_glDrawRangeElements((glDrawRangeElements_client_proc_t)ptr);
	ptr = getProc("glDrawRangeElementsDataAEMU", userData); if(ptr) set_glDrawRangeElementsDataAEMU((glDrawRangeElementsDataAEMU_client_proc_t)ptr);
	ptr = getProc("glDrawRangeElementsOffsetAEMU", userData); if(ptr) set_glDrawRangeElementsOffsetAEMU((glDrawRangeElementsOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glFenceSync", userData); if(ptr) set_glFenceSync((glFenceSync_client_proc_t)ptr);
	ptr = getProc("glClientWaitSync", userData); if(ptr) set_glClientWaitSync((glClientWaitSync_client_proc_t)ptr);
	ptr = getProc("glWaitSync", userData); if(ptr) set_glWaitSync((glWaitSync_client_proc_t)ptr);
	ptr = getProc("glDeleteSync", userData); if(ptr) set_glDeleteSync((glDeleteSync_client_proc_t)ptr);
	ptr = getProc("glIsSync", userData); if(ptr) set_glIsSync((glIsSync_client_proc_t)ptr);
	ptr = getProc("glGetSynciv", userData); if(ptr) set_glGetSynciv((glGetSynciv_client_proc_t)ptr);
	ptr = getProc("glFenceSyncAEMU", userData); if(ptr) set_glFenceSyncAEMU((glFenceSyncAEMU_client_proc_t)ptr);
	ptr = getProc("glClientWaitSyncAEMU", userData); if(ptr) set_glClientWaitSyncAEMU((glClientWaitSyncAEMU_client_proc_t)ptr);
	ptr = getProc("glWaitSyncAEMU", userData); if(ptr) set_glWaitSyncAEMU((glWaitSyncAEMU_client_proc_t)ptr);
	ptr = getProc("glDeleteSyncAEMU", userData); if(ptr) set_glDeleteSyncAEMU((glDeleteSyncAEMU_client_proc_t)ptr);
	ptr = getProc("glIsSyncAEMU", userData); if(ptr) set_glIsSyncAEMU((glIsSyncAEMU_client_proc_t)ptr);
	ptr = getProc("glGetSyncivAEMU", userData); if(ptr) set_glGetSyncivAEMU((glGetSyncivAEMU_client_proc_t)ptr);
	ptr = getProc("glDrawBuffers", userData); if(ptr) set_glDrawBuffers((glDrawBuffers_client_proc_t)ptr);
	ptr = getProc("glReadBuffer", userData); if(ptr) set_glReadBuffer((glReadBuffer_client_proc_t)ptr);
	ptr = getProc("glBlitFramebuffer", userData); if(ptr) set_glBlitFramebuffer((glBlitFramebuffer_client_proc_t)ptr);
	ptr = getProc("glInvalidateFramebuffer", userData); if(ptr) set_glInvalidateFramebuffer((glInvalidateFramebuffer_client_proc_t)ptr);
	ptr = getProc("glInvalidateSubFramebuffer", userData); if(ptr) set_glInvalidateSubFramebuffer((glInvalidateSubFramebuffer_client_proc_t)ptr);
	ptr = getProc("glFramebufferTextureLayer", userData); if(ptr) set_glFramebufferTextureLayer((glFramebufferTextureLayer_client_proc_t)ptr);
	ptr = getProc("glRenderbufferStorageMultisample", userData); if(ptr) set_glRenderbufferStorageMultisample((glRenderbufferStorageMultisample_client_proc_t)ptr);
	ptr = getProc("glTexStorage2D", userData); if(ptr) set_glTexStorage2D((glTexStorage2D_client_proc_t)ptr);
	ptr = getProc("glGetInternalformativ", userData); if(ptr) set_glGetInternalformativ((glGetInternalformativ_client_proc_t)ptr);
	ptr = getProc("glBeginTransformFeedback", userData); if(ptr) set_glBeginTransformFeedback((glBeginTransformFeedback_client_proc_t)ptr);
	ptr = getProc("glEndTransformFeedback", userData); if(ptr) set_glEndTransformFeedback((glEndTransformFeedback_client_proc_t)ptr);
	ptr = getProc("glGenTransformFeedbacks", userData); if(ptr) set_glGenTransformFeedbacks((glGenTransformFeedbacks_client_proc_t)ptr);
	ptr = getProc("glDeleteTransformFeedbacks", userData); if(ptr) set_glDeleteTransformFeedbacks((glDeleteTransformFeedbacks_client_proc_t)ptr);
	ptr = getProc("glBindTransformFeedback", userData); if(ptr) set_glBindTransformFeedback((glBindTransformFeedback_client_proc_t)ptr);
	ptr = getProc("glPauseTransformFeedback", userData); if(ptr) set_glPauseTransformFeedback((glPauseTransformFeedback_client_proc_t)ptr);
	ptr = getProc("glResumeTransformFeedback", userData); if(ptr) set_glResumeTransformFeedback((glResumeTransformFeedback_client_proc_t)ptr);
	ptr = getProc("glIsTransformFeedback", userData); if(ptr) set_glIsTransformFeedback((glIsTransformFeedback_client_proc_t)ptr);
	ptr = getProc("glTransformFeedbackVaryings", userData); if(ptr) set_glTransformFeedbackVaryings((glTransformFeedbackVaryings_client_proc_t)ptr);
	ptr = getProc("glTransformFeedbackVaryingsAEMU", userData); if(ptr) set_glTransformFeedbackVaryingsAEMU((glTransformFeedbackVaryingsAEMU_client_proc_t)ptr);
	ptr = getProc("glGetTransformFeedbackVarying", userData); if(ptr) set_glGetTransformFeedbackVarying((glGetTransformFeedbackVarying_client_proc_t)ptr);
	ptr = getProc("glGenSamplers", userData); if(ptr) set_glGenSamplers((glGenSamplers_client_proc_t)ptr);
	ptr = getProc("glDeleteSamplers", userData); if(ptr) set_glDeleteSamplers((glDeleteSamplers_client_proc_t)ptr);
	ptr = getProc("glBindSampler", userData); if(ptr) set_glBindSampler((glBindSampler_client_proc_t)ptr);
	ptr = getProc("glSamplerParameterf", userData); if(ptr) set_glSamplerParameterf((glSamplerParameterf_client_proc_t)ptr);
	ptr = getProc("glSamplerParameteri", userData); if(ptr) set_glSamplerParameteri((glSamplerParameteri_client_proc_t)ptr);
	ptr = getProc("glSamplerParameterfv", userData); if(ptr) set_glSamplerParameterfv((glSamplerParameterfv_client_proc_t)ptr);
	ptr = getProc("glSamplerParameteriv", userData); if(ptr) set_glSamplerParameteriv((glSamplerParameteriv_client_proc_t)ptr);
	ptr = getProc("glGetSamplerParameterfv", userData); if(ptr) set_glGetSamplerParameterfv((glGetSamplerParameterfv_client_proc_t)ptr);
	ptr = getProc("glGetSamplerParameteriv", userData); if(ptr) set_glGetSamplerParameteriv((glGetSamplerParameteriv_client_proc_t)ptr);
	ptr = getProc("glIsSampler", userData); if(ptr) set_glIsSampler((glIsSampler_client_proc_t)ptr);
	ptr = getProc("glGenQueries", userData); if(ptr) set_glGenQueries((glGenQueries_client_proc_t)ptr);
	ptr = getProc("glDeleteQueries", userData); if(ptr) set_glDeleteQueries((glDeleteQueries_client_proc_t)ptr);
	ptr = getProc("glBeginQuery", userData); if(ptr) set_glBeginQuery((glBeginQuery_client_proc_t)ptr);
	ptr = getProc("glEndQuery", userData); if(ptr) set_glEndQuery((glEndQuery_client_proc_t)ptr);
	ptr = getProc("glGetQueryiv", userData); if(ptr) set_glGetQueryiv((glGetQueryiv_client_proc_t)ptr);
	ptr = getProc("glGetQueryObjectuiv", userData); if(ptr) set_glGetQueryObjectuiv((glGetQueryObjectuiv_client_proc_t)ptr);
	ptr = getProc("glIsQuery", userData); if(ptr) set_glIsQuery((glIsQuery_client_proc_t)ptr);
	ptr = getProc("glProgramParameteri", userData); if(ptr) set_glProgramParameteri((glProgramParameteri_client_proc_t)ptr);
	ptr = getProc("glProgramBinary", userData); if(ptr) set_glProgramBinary((glProgramBinary_client_proc_t)ptr);
	ptr = getProc("glGetProgramBinary", userData); if(ptr) set_glGetProgramBinary((glGetProgramBinary_client_proc_t)ptr);
	ptr = getProc("glGetFragDataLocation", userData); if(ptr) set_glGetFragDataLocation((glGetFragDataLocation_client_proc_t)ptr);
	ptr = getProc("glGetInteger64v", userData); if(ptr) set_glGetInteger64v((glGetInteger64v_client_proc_t)ptr);
	ptr = getProc("glGetIntegeri_v", userData); if(ptr) set_glGetIntegeri_v((glGetIntegeri_v_client_proc_t)ptr);
	ptr = getProc("glGetInteger64i_v", userData); if(ptr) set_glGetInteger64i_v((glGetInteger64i_v_client_proc_t)ptr);
	ptr = getProc("glTexImage3D", userData); if(ptr) set_glTexImage3D((glTexImage3D_client_proc_t)ptr);
	ptr = getProc("glTexImage3DOffsetAEMU", userData); if(ptr) set_glTexImage3DOffsetAEMU((glTexImage3DOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glTexStorage3D", userData); if(ptr) set_glTexStorage3D((glTexStorage3D_client_proc_t)ptr);
	ptr = getProc("glTexSubImage3D", userData); if(ptr) set_glTexSubImage3D((glTexSubImage3D_client_proc_t)ptr);
	ptr = getProc("glTexSubImage3DOffsetAEMU", userData); if(ptr) set_glTexSubImage3DOffsetAEMU((glTexSubImage3DOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glCompressedTexImage3D", userData); if(ptr) set_glCompressedTexImage3D((glCompressedTexImage3D_client_proc_t)ptr);
	ptr = getProc("glCompressedTexImage3DOffsetAEMU", userData); if(ptr) set_glCompressedTexImage3DOffsetAEMU((glCompressedTexImage3DOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glCompressedTexSubImage3D", userData); if(ptr) set_glCompressedTexSubImage3D((glCompressedTexSubImage3D_client_proc_t)ptr);
	ptr = getProc("glCompressedTexSubImage3DOffsetAEMU", userData); if(ptr) set_glCompressedTexSubImage3DOffsetAEMU((glCompressedTexSubImage3DOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glCopyTexSubImage3D", userData); if(ptr) set_glCopyTexSubImage3D((glCopyTexSubImage3D_client_proc_t)ptr);
	ptr = getProc("glGetStringi", userData); if(ptr) set_glGetStringi((glGetStringi_client_proc_t)ptr);
	ptr = getProc("glGetBooleani_v", userData); if(ptr) set_glGetBooleani_v((glGetBooleani_v_client_proc_t)ptr);
	ptr = getProc("glMemoryBarrier", userData); if(ptr) set_glMemoryBarrier((glMemoryBarrier_client_proc_t)ptr);
	ptr = getProc("glMemoryBarrierByRegion", userData); if(ptr) set_glMemoryBarrierByRegion((glMemoryBarrierByRegion_client_proc_t)ptr);
	ptr = getProc("glGenProgramPipelines", userData); if(ptr) set_glGenProgramPipelines((glGenProgramPipelines_client_proc_t)ptr);
	ptr = getProc("glDeleteProgramPipelines", userData); if(ptr) set_glDeleteProgramPipelines((glDeleteProgramPipelines_client_proc_t)ptr);
	ptr = getProc("glBindProgramPipeline", userData); if(ptr) set_glBindProgramPipeline((glBindProgramPipeline_client_proc_t)ptr);
	ptr = getProc("glGetProgramPipelineiv", userData); if(ptr) set_glGetProgramPipelineiv((glGetProgramPipelineiv_client_proc_t)ptr);
	ptr = getProc("glGetProgramPipelineInfoLog", userData); if(ptr) set_glGetProgramPipelineInfoLog((glGetProgramPipelineInfoLog_client_proc_t)ptr);
	ptr = getProc("glValidateProgramPipeline", userData); if(ptr) set_glValidateProgramPipeline((glValidateProgramPipeline_client_proc_t)ptr);
	ptr = getProc("glIsProgramPipeline", userData); if(ptr) set_glIsProgramPipeline((glIsProgramPipeline_client_proc_t)ptr);
	ptr = getProc("glUseProgramStages", userData); if(ptr) set_glUseProgramStages((glUseProgramStages_client_proc_t)ptr);
	ptr = getProc("glActiveShaderProgram", userData); if(ptr) set_glActiveShaderProgram((glActiveShaderProgram_client_proc_t)ptr);
	ptr = getProc("glCreateShaderProgramv", userData); if(ptr) set_glCreateShaderProgramv((glCreateShaderProgramv_client_proc_t)ptr);
	ptr = getProc("glCreateShaderProgramvAEMU", userData); if(ptr) set_glCreateShaderProgramvAEMU((glCreateShaderProgramvAEMU_client_proc_t)ptr);
	ptr = getProc("glProgramUniform1f", userData); if(ptr) set_glProgramUniform1f((glProgramUniform1f_client_proc_t)ptr);
	ptr = getProc("glProgramUniform2f", userData); if(ptr) set_glProgramUniform2f((glProgramUniform2f_client_proc_t)ptr);
	ptr = getProc("glProgramUniform3f", userData); if(ptr) set_glProgramUniform3f((glProgramUniform3f_client_proc_t)ptr);
	ptr = getProc("glProgramUniform4f", userData); if(ptr) set_glProgramUniform4f((glProgramUniform4f_client_proc_t)ptr);
	ptr = getProc("glProgramUniform1i", userData); if(ptr) set_glProgramUniform1i((glProgramUniform1i_client_proc_t)ptr);
	ptr = getProc("glProgramUniform2i", userData); if(ptr) set_glProgramUniform2i((glProgramUniform2i_client_proc_t)ptr);
	ptr = getProc("glProgramUniform3i", userData); if(ptr) set_glProgramUniform3i((glProgramUniform3i_client_proc_t)ptr);
	ptr = getProc("glProgramUniform4i", userData); if(ptr) set_glProgramUniform4i((glProgramUniform4i_client_proc_t)ptr);
	ptr = getProc("glProgramUniform1ui", userData); if(ptr) set_glProgramUniform1ui((glProgramUniform1ui_client_proc_t)ptr);
	ptr = getProc("glProgramUniform2ui", userData); if(ptr) set_glProgramUniform2ui((glProgramUniform2ui_client_proc_t)ptr);
	ptr = getProc("glProgramUniform3ui", userData); if(ptr) set_glProgramUniform3ui((glProgramUniform3ui_client_proc_t)ptr);
	ptr = getProc("glProgramUniform4ui", userData); if(ptr) set_glProgramUniform4ui((glProgramUniform4ui_client_proc_t)ptr);
	ptr = getProc("glProgramUniform1fv", userData); if(ptr) set_glProgramUniform1fv((glProgramUniform1fv_client_proc_t)ptr);
	ptr = getProc("glProgramUniform2fv", userData); if(ptr) set_glProgramUniform2fv((glProgramUniform2fv_client_proc_t)ptr);
	ptr = getProc("glProgramUniform3fv", userData); if(ptr) set_glProgramUniform3fv((glProgramUniform3fv_client_proc_t)ptr);
	ptr = getProc("glProgramUniform4fv", userData); if(ptr) set_glProgramUniform4fv((glProgramUniform4fv_client_proc_t)ptr);
	ptr = getProc("glProgramUniform1iv", userData); if(ptr) set_glProgramUniform1iv((glProgramUniform1iv_client_proc_t)ptr);
	ptr = getProc("glProgramUniform2iv", userData); if(ptr) set_glProgramUniform2iv((glProgramUniform2iv_client_proc_t)ptr);
	ptr = getProc("glProgramUniform3iv", userData); if(ptr) set_glProgramUniform3iv((glProgramUniform3iv_client_proc_t)ptr);
	ptr = getProc("glProgramUniform4iv", userData); if(ptr) set_glProgramUniform4iv((glProgramUniform4iv_client_proc_t)ptr);
	ptr = getProc("glProgramUniform1uiv", userData); if(ptr) set_glProgramUniform1uiv((glProgramUniform1uiv_client_proc_t)ptr);
	ptr = getProc("glProgramUniform2uiv", userData); if(ptr) set_glProgramUniform2uiv((glProgramUniform2uiv_client_proc_t)ptr);
	ptr = getProc("glProgramUniform3uiv", userData); if(ptr) set_glProgramUniform3uiv((glProgramUniform3uiv_client_proc_t)ptr);
	ptr = getProc("glProgramUniform4uiv", userData); if(ptr) set_glProgramUniform4uiv((glProgramUniform4uiv_client_proc_t)ptr);
	ptr = getProc("glProgramUniformMatrix2fv", userData); if(ptr) set_glProgramUniformMatrix2fv((glProgramUniformMatrix2fv_client_proc_t)ptr);
	ptr = getProc("glProgramUniformMatrix3fv", userData); if(ptr) set_glProgramUniformMatrix3fv((glProgramUniformMatrix3fv_client_proc_t)ptr);
	ptr = getProc("glProgramUniformMatrix4fv", userData); if(ptr) set_glProgramUniformMatrix4fv((glProgramUniformMatrix4fv_client_proc_t)ptr);
	ptr = getProc("glProgramUniformMatrix2x3fv", userData); if(ptr) set_glProgramUniformMatrix2x3fv((glProgramUniformMatrix2x3fv_client_proc_t)ptr);
	ptr = getProc("glProgramUniformMatrix3x2fv", userData); if(ptr) set_glProgramUniformMatrix3x2fv((glProgramUniformMatrix3x2fv_client_proc_t)ptr);
	ptr = getProc("glProgramUniformMatrix2x4fv", userData); if(ptr) set_glProgramUniformMatrix2x4fv((glProgramUniformMatrix2x4fv_client_proc_t)ptr);
	ptr = getProc("glProgramUniformMatrix4x2fv", userData); if(ptr) set_glProgramUniformMatrix4x2fv((glProgramUniformMatrix4x2fv_client_proc_t)ptr);
	ptr = getProc("glProgramUniformMatrix3x4fv", userData); if(ptr) set_glProgramUniformMatrix3x4fv((glProgramUniformMatrix3x4fv_client_proc_t)ptr);
	ptr = getProc("glProgramUniformMatrix4x3fv", userData); if(ptr) set_glProgramUniformMatrix4x3fv((glProgramUniformMatrix4x3fv_client_proc_t)ptr);
	ptr = getProc("glGetProgramInterfaceiv", userData); if(ptr) set_glGetProgramInterfaceiv((glGetProgramInterfaceiv_client_proc_t)ptr);
	ptr = getProc("glGetProgramResourceiv", userData); if(ptr) set_glGetProgramResourceiv((glGetProgramResourceiv_client_proc_t)ptr);
	ptr = getProc("glGetProgramResourceIndex", userData); if(ptr) set_glGetProgramResourceIndex((glGetProgramResourceIndex_client_proc_t)ptr);
	ptr = getProc("glGetProgramResourceLocation", userData); if(ptr) set_glGetProgramResourceLocation((glGetProgramResourceLocation_client_proc_t)ptr);
	ptr = getProc("glGetProgramResourceName", userData); if(ptr) set_glGetProgramResourceName((glGetProgramResourceName_client_proc_t)ptr);
	ptr = getProc("glBindImageTexture", userData); if(ptr) set_glBindImageTexture((glBindImageTexture_client_proc_t)ptr);
	ptr = getProc("glDispatchCompute", userData); if(ptr) set_glDispatchCompute((glDispatchCompute_client_proc_t)ptr);
	ptr = getProc("glDispatchComputeIndirect", userData); if(ptr) set_glDispatchComputeIndirect((glDispatchComputeIndirect_client_proc_t)ptr);
	ptr = getProc("glBindVertexBuffer", userData); if(ptr) set_glBindVertexBuffer((glBindVertexBuffer_client_proc_t)ptr);
	ptr = getProc("glVertexAttribBinding", userData); if(ptr) set_glVertexAttribBinding((glVertexAttribBinding_client_proc_t)ptr);
	ptr = getProc("glVertexAttribFormat", userData); if(ptr) set_glVertexAttribFormat((glVertexAttribFormat_client_proc_t)ptr);
	ptr = getProc("glVertexAttribIFormat", userData); if(ptr) set_glVertexAttribIFormat((glVertexAttribIFormat_client_proc_t)ptr);
	ptr = getProc("glVertexBindingDivisor", userData); if(ptr) set_glVertexBindingDivisor((glVertexBindingDivisor_client_proc_t)ptr);
	ptr = getProc("glDrawArraysIndirect", userData); if(ptr) set_glDrawArraysIndirect((glDrawArraysIndirect_client_proc_t)ptr);
	ptr = getProc("glDrawArraysIndirectDataAEMU", userData); if(ptr) set_glDrawArraysIndirectDataAEMU((glDrawArraysIndirectDataAEMU_client_proc_t)ptr);
	ptr = getProc("glDrawArraysIndirectOffsetAEMU", userData); if(ptr) set_glDrawArraysIndirectOffsetAEMU((glDrawArraysIndirectOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glDrawElementsIndirect", userData); if(ptr) set_glDrawElementsIndirect((glDrawElementsIndirect_client_proc_t)ptr);
	ptr = getProc("glDrawElementsIndirectDataAEMU", userData); if(ptr) set_glDrawElementsIndirectDataAEMU((glDrawElementsIndirectDataAEMU_client_proc_t)ptr);
	ptr = getProc("glDrawElementsIndirectOffsetAEMU", userData); if(ptr) set_glDrawElementsIndirectOffsetAEMU((glDrawElementsIndirectOffsetAEMU_client_proc_t)ptr);
	ptr = getProc("glTexStorage2DMultisample", userData); if(ptr) set_glTexStorage2DMultisample((glTexStorage2DMultisample_client_proc_t)ptr);
	ptr = getProc("glSampleMaski", userData); if(ptr) set_glSampleMaski((glSampleMaski_client_proc_t)ptr);
	ptr = getProc("glGetMultisamplefv", userData); if(ptr) set_glGetMultisamplefv((glGetMultisamplefv_client_proc_t)ptr);
	ptr = getProc("glFramebufferParameteri", userData); if(ptr) set_glFramebufferParameteri((glFramebufferParameteri_client_proc_t)ptr);
	ptr = getProc("glGetFramebufferParameteriv", userData); if(ptr) set_glGetFramebufferParameteriv((glGetFramebufferParameteriv_client_proc_t)ptr);
	ptr = getProc("glGetTexLevelParameterfv", userData); if(ptr) set_glGetTexLevelParameterfv((glGetTexLevelParameterfv_client_proc_t)ptr);
	ptr = getProc("glGetTexLevelParameteriv", userData); if(ptr) set_glGetTexLevelParameteriv((glGetTexLevelParameteriv_client_proc_t)ptr);
	ptr = getProc("glAlphaFunc", userData); if(ptr) set_glAlphaFunc((glAlphaFunc_client_proc_t)ptr);
	ptr = getProc("glClipPlanef", userData); if(ptr) set_glClipPlanef((glClipPlanef_client_proc_t)ptr);
	ptr = getProc("glColor4f", userData); if(ptr) set_glColor4f((glColor4f_client_proc_t)ptr);
	ptr = getProc("glFogf", userData); if(ptr) set_glFogf((glFogf_client_proc_t)ptr);
	ptr = getProc("glFogfv", userData); if(ptr) set_glFogfv((glFogfv_client_proc_t)ptr);
	ptr = getProc("glFrustumf", userData); if(ptr) set_glFrustumf((glFrustumf_client_proc_t)ptr);
	ptr = getProc("glGetClipPlanef", userData); if(ptr) set_glGetClipPlanef((glGetClipPlanef_client_proc_t)ptr);
	ptr = getProc("glGetLightfv", userData); if(ptr) set_glGetLightfv((glGetLightfv_client_proc_t)ptr);
	ptr = getProc("glGetMaterialfv", userData); if(ptr) set_glGetMaterialfv((glGetMaterialfv_client_proc_t)ptr);
	ptr = getProc("glGetTexEnvfv", userData); if(ptr) set_glGetTexEnvfv((glGetTexEnvfv_client_proc_t)ptr);
	ptr = getProc("glLightModelf", userData); if(ptr) set_glLightModelf((glLightModelf_client_proc_t)ptr);
	ptr = getProc("glLightModelfv", userData); if(ptr) set_glLightModelfv((glLightModelfv_client_proc_t)ptr);
	ptr = getProc("glLightf", userData); if(ptr) set_glLightf((glLightf_client_proc_t)ptr);
	ptr = getProc("glLightfv", userData); if(ptr) set_glLightfv((glLightfv_client_proc_t)ptr);
	ptr = getProc("glLoadMatrixf", userData); if(ptr) set_glLoadMatrixf((glLoadMatrixf_client_proc_t)ptr);
	ptr = getProc("glMaterialf", userData); if(ptr) set_glMaterialf((glMaterialf_client_proc_t)ptr);
	ptr = getProc("glMaterialfv", userData); if(ptr) set_glMaterialfv((glMaterialfv_client_proc_t)ptr);
	ptr = getProc("glMultMatrixf", userData); if(ptr) set_glMultMatrixf((glMultMatrixf_client_proc_t)ptr);
	ptr = getProc("glMultiTexCoord4f", userData); if(ptr) set_glMultiTexCoord4f((glMultiTexCoord4f_client_proc_t)ptr);
	ptr = getProc("glNormal3f", userData); if(ptr) set_glNormal3f((glNormal3f_client_proc_t)ptr);
	ptr = getProc("glOrthof", userData); if(ptr) set_glOrthof((glOrthof_client_proc_t)ptr);
	ptr = getProc("glPointParameterf", userData); if(ptr) set_glPointParameterf((glPointParameterf_client_proc_t)ptr);
	ptr = getProc("glPointParameterfv", userData); if(ptr) set_glPointParameterfv((glPointParameterfv_client_proc_t)ptr);
	ptr = getProc("glPointSize", userData); if(ptr) set_glPointSize((glPointSize_client_proc_t)ptr);
	ptr = getProc("glRotatef", userData); if(ptr) set_glRotatef((glRotatef_client_proc_t)ptr);
	ptr = getProc("glScalef", userData); if(ptr) set_glScalef((glScalef_client_proc_t)ptr);
	ptr = getProc("glTexEnvf", userData); if(ptr) set_glTexEnvf((glTexEnvf_client_proc_t)ptr);
	ptr = getProc("glTexEnvfv", userData); if(ptr) set_glTexEnvfv((glTexEnvfv_client_proc_t)ptr);
	ptr = getProc("glTranslatef", userData); if(ptr) set_glTranslatef((glTranslatef_client_proc_t)ptr);
	ptr = getProc("glAlphaFuncx", userData); if(ptr) set_glAlphaFuncx((glAlphaFuncx_client_proc_t)ptr);
	ptr = getProc("glClearColorx", userData); if(ptr) set_glClearColorx((glClearColorx_client_proc_t)ptr);
	ptr = getProc("glClearDepthx", userData); if(ptr) set_glClearDepthx((glClearDepthx_client_proc_t)ptr);
	ptr = getProc("glClientActiveTexture", userData); if(ptr) set_glClientActiveTexture((glClientActiveTexture_client_proc_t)ptr);
	ptr = getProc("glColor4ub", userData); if(ptr) set_glColor4ub((glColor4ub_client_proc_t)ptr);
	ptr = getProc("glColor4x", userData); if(ptr) set_glColor4x((glColor4x_client_proc_t)ptr);
	ptr = getProc("glColorPointer", userData); if(ptr) set_glColorPointer((glColorPointer_client_proc_t)ptr);
	ptr = getProc("glDepthRangex", userData); if(ptr) set_glDepthRangex((glDepthRangex_client_proc_t)ptr);
	ptr = getProc("glDisableClientState", userData); if(ptr) set_glDisableClientState((glDisableClientState_client_proc_t)ptr);
	ptr = getProc("glEnableClientState", userData); if(ptr) set_glEnableClientState((glEnableClientState_client_proc_t)ptr);
	ptr = getProc("glFogx", userData); if(ptr) set_glFogx((glFogx_client_proc_t)ptr);
	ptr = getProc("glFogxv", userData); if(ptr) set_glFogxv((glFogxv_client_proc_t)ptr);
	ptr = getProc("glFrustumx", userData); if(ptr) set_glFrustumx((glFrustumx_client_proc_t)ptr);
	ptr = getProc("glClipPlanex", userData); if(ptr) set_glClipPlanex((glClipPlanex_client_proc_t)ptr);
	ptr = getProc("glGetFixedv", userData); if(ptr) set_glGetFixedv((glGetFixedv_client_proc_t)ptr);
	ptr = getProc("glGetLightxv", userData); if(ptr) set_glGetLightxv((glGetLightxv_client_proc_t)ptr);
	ptr = getProc("glGetMaterialxv", userData); if(ptr) set_glGetMaterialxv((glGetMaterialxv_client_proc_t)ptr);
	ptr = getProc("glGetPointerv", userData); if(ptr) set_glGetPointerv((glGetPointerv_client_proc_t)ptr);
	ptr = getProc("glGetTexEnviv", userData); if(ptr) set_glGetTexEnviv((glGetTexEnviv_client_proc_t)ptr);
	ptr = getProc("glGetTexEnvxv", userData); if(ptr) set_glGetTexEnvxv((glGetTexEnvxv_client_proc_t)ptr);
	ptr = getProc("glGetTexParameterxv", userData); if(ptr) set_glGetTexParameterxv((glGetTexParameterxv_client_proc_t)ptr);
	ptr = getProc("glLightModelx", userData); if(ptr) set_glLightModelx((glLightModelx_client_proc_t)ptr);
	ptr = getProc("glLightModelxv", userData); if(ptr) set_glLightModelxv((glLightModelxv_client_proc_t)ptr);
	ptr = getProc("glLightx", userData); if(ptr) set_glLightx((glLightx_client_proc_t)ptr);
	ptr = getProc("glLightxv", userData); if(ptr) set_glLightxv((glLightxv_client_proc_t)ptr);
	ptr = getProc("glLineWidthx", userData); if(ptr) set_glLineWidthx((glLineWidthx_client_proc_t)ptr);
	ptr = getProc("glLoadIdentity", userData); if(ptr) set_glLoadIdentity((glLoadIdentity_client_proc_t)ptr);
	ptr = getProc("glLoadMatrixx", userData); if(ptr) set_glLoadMatrixx((glLoadMatrixx_client_proc_t)ptr);
	ptr = getProc("glLogicOp", userData); if(ptr) set_glLogicOp((glLogicOp_client_proc_t)ptr);
	ptr = getProc("glMaterialx", userData); if(ptr) set_glMaterialx((glMaterialx_client_proc_t)ptr);
	ptr = getProc("glMaterialxv", userData); if(ptr) set_glMaterialxv((glMaterialxv_client_proc_t)ptr);
	ptr = getProc("glMatrixMode", userData); if(ptr) set_glMatrixMode((glMatrixMode_client_proc_t)ptr);
	ptr = getProc("glMultMatrixx", userData); if(ptr) set_glMultMatrixx((glMultMatrixx_client_proc_t)ptr);
	ptr = getProc("glMultiTexCoord4x", userData); if(ptr) set_glMultiTexCoord4x((glMultiTexCoord4x_client_proc_t)ptr);
	ptr = getProc("glNormal3x", userData); if(ptr) set_glNormal3x((glNormal3x_client_proc_t)ptr);
	ptr = getProc("glNormalPointer", userData); if(ptr) set_glNormalPointer((glNormalPointer_client_proc_t)ptr);
	ptr = getProc("glOrthox", userData); if(ptr) set_glOrthox((glOrthox_client_proc_t)ptr);
	ptr = getProc("glPointParameterx", userData); if(ptr) set_glPointParameterx((glPointParameterx_client_proc_t)ptr);
	ptr = getProc("glPointParameterxv", userData); if(ptr) set_glPointParameterxv((glPointParameterxv_client_proc_t)ptr);
	ptr = getProc("glPointSizex", userData); if(ptr) set_glPointSizex((glPointSizex_client_proc_t)ptr);
	ptr = getProc("glPolygonOffsetx", userData); if(ptr) set_glPolygonOffsetx((glPolygonOffsetx_client_proc_t)ptr);
	ptr = getProc("glPopMatrix", userData); if(ptr) set_glPopMatrix((glPopMatrix_client_proc_t)ptr);
	ptr = getProc("glPushMatrix", userData); if(ptr) set_glPushMatrix((glPushMatrix_client_proc_t)ptr);
	ptr = getProc("glRotatex", userData); if(ptr) set_glRotatex((glRotatex_client_proc_t)ptr);
	ptr = getProc("glSampleCoveragex", userData); if(ptr) set_glSampleCoveragex((glSampleCoveragex_client_proc_t)ptr);
	ptr = getProc("glScalex", userData); if(ptr) set_glScalex((glScalex_client_proc_t)ptr);
	ptr = getProc("glShadeModel", userData); if(ptr) set_glShadeModel((glShadeModel_client_proc_t)ptr);
	ptr = getProc("glTexCoordPointer", userData); if(ptr) set_glTexCoordPointer((glTexCoordPointer_client_proc_t)ptr);
	ptr = getProc("glTexEnvi", userData); if(ptr) set_glTexEnvi((glTexEnvi_client_proc_t)ptr);
	ptr = getProc("glTexEnvx", userData); if(ptr) set_glTexEnvx((glTexEnvx_client_proc_t)ptr);
	ptr = getProc("glTexEnviv", userData); if(ptr) set_glTexEnviv((glTexEnviv_client_proc_t)ptr);
	ptr = getProc("glTexEnvxv", userData); if(ptr) set_glTexEnvxv((glTexEnvxv_client_proc_t)ptr);
	ptr = getProc("glTexParameterx", userData); if(ptr) set_glTexParameterx((glTexParameterx_client_proc_t)ptr);
	ptr = getProc("glTexParameterxv", userData); if(ptr) set_glTexParameterxv((glTexParameterxv_client_proc_t)ptr);
	ptr = getProc("glTranslatex", userData); if(ptr) set_glTranslatex((glTranslatex_client_proc_t)ptr);
	ptr = getProc("glVertexPointer", userData); if(ptr) set_glVertexPointer((glVertexPointer_client_proc_t)ptr);
	ptr = getProc("glPointSizePointerOES", userData); if(ptr) set_glPointSizePointerOES((glPointSizePointerOES_client_proc_t)ptr);
	ptr = getProc("glVertexPointerOffset", userData); if(ptr) set_glVertexPointerOffset((glVertexPointerOffset_client_proc_t)ptr);
	ptr = getProc("glColorPointerOffset", userData); if(ptr) set_glColorPointerOffset((glColorPointerOffset_client_proc_t)ptr);
	ptr = getProc("glNormalPointerOffset", userData); if(ptr) set_glNormalPointerOffset((glNormalPointerOffset_client_proc_t)ptr);
	ptr = getProc("glPointSizePointerOffset", userData); if(ptr) set_glPointSizePointerOffset((glPointSizePointerOffset_client_proc_t)ptr);
	ptr = getProc("glTexCoordPointerOffset", userData); if(ptr) set_glTexCoordPointerOffset((glTexCoordPointerOffset_client_proc_t)ptr);
	ptr = getProc("glWeightPointerOffset", userData); if(ptr) set_glWeightPointerOffset((glWeightPointerOffset_client_proc_t)ptr);
	ptr = getProc("glMatrixIndexPointerOffset", userData); if(ptr) set_glMatrixIndexPointerOffset((glMatrixIndexPointerOffset_client_proc_t)ptr);
	ptr = getProc("glVertexPointerData", userData); if(ptr) set_glVertexPointerData((glVertexPointerData_client_proc_t)ptr);
	ptr = getProc("glColorPointerData", userData); if(ptr) set_glColorPointerData((glColorPointerData_client_proc_t)ptr);
	ptr = getProc("glNormalPointerData", userData); if(ptr) set_glNormalPointerData((glNormalPointerData_client_proc_t)ptr);
	ptr = getProc("glTexCoordPointerData", userData); if(ptr) set_glTexCoordPointerData((glTexCoordPointerData_client_proc_t)ptr);
	ptr = getProc("glPointSizePointerData", userData); if(ptr) set_glPointSizePointerData((glPointSizePointerData_client_proc_t)ptr);
	ptr = getProc("glWeightPointerData", userData); if(ptr) set_glWeightPointerData((glWeightPointerData_client_proc_t)ptr);
	ptr = getProc("glMatrixIndexPointerData", userData); if(ptr) set_glMatrixIndexPointerData((glMatrixIndexPointerData_client_proc_t)ptr);
	ptr = getProc("glBlendEquationSeparateOES", userData); if(ptr) set_glBlendEquationSeparateOES((glBlendEquationSeparateOES_client_proc_t)ptr);
	ptr = getProc("glBlendFuncSeparateOES", userData); if(ptr) set_glBlendFuncSeparateOES((glBlendFuncSeparateOES_client_proc_t)ptr);
	ptr = getProc("glBlendEquationOES", userData); if(ptr) set_glBlendEquationOES((glBlendEquationOES_client_proc_t)ptr);
	ptr = getProc("glDrawTexsOES", userData); if(ptr) set_glDrawTexsOES((glDrawTexsOES_client_proc_t)ptr);
	ptr = getProc("glDrawTexiOES", userData); if(ptr) set_glDrawTexiOES((glDrawTexiOES_client_proc_t)ptr);
	ptr = getProc("glDrawTexxOES", userData); if(ptr) set_glDrawTexxOES((glDrawTexxOES_client_proc_t)ptr);
	ptr = getProc("glDrawTexsvOES", userData); if(ptr) set_glDrawTexsvOES((glDrawTexsvOES_client_proc_t)ptr);
	ptr = getProc("glDrawTexivOES", userData); if(ptr) set_glDrawTexivOES((glDrawTexivOES_client_proc_t)ptr);
	ptr = getProc("glDrawTexxvOES", userData); if(ptr) set_glDrawTexxvOES((glDrawTexxvOES_client_proc_t)ptr);
	ptr = getProc("glDrawTexfOES", userData); if(ptr) set_glDrawTexfOES((glDrawTexfOES_client_proc_t)ptr);
	ptr = getProc("glDrawTexfvOES", userData); if(ptr) set_glDrawTexfvOES((glDrawTexfvOES_client_proc_t)ptr);
	ptr = getProc("glAlphaFuncxOES", userData); if(ptr) set_glAlphaFuncxOES((glAlphaFuncxOES_client_proc_t)ptr);
	ptr = getProc("glClearColorxOES", userData); if(ptr) set_glClearColorxOES((glClearColorxOES_client_proc_t)ptr);
	ptr = getProc("glClearDepthxOES", userData); if(ptr) set_glClearDepthxOES((glClearDepthxOES_client_proc_t)ptr);
	ptr = getProc("glClipPlanexOES", userData); if(ptr) set_glClipPlanexOES((glClipPlanexOES_client_proc_t)ptr);
	ptr = getProc("glClipPlanexIMG", userData); if(ptr) set_glClipPlanexIMG((glClipPlanexIMG_client_proc_t)ptr);
	ptr = getProc("glColor4xOES", userData); if(ptr) set_glColor4xOES((glColor4xOES_client_proc_t)ptr);
	ptr = getProc("glDepthRangexOES", userData); if(ptr) set_glDepthRangexOES((glDepthRangexOES_client_proc_t)ptr);
	ptr = getProc("glFogxOES", userData); if(ptr) set_glFogxOES((glFogxOES_client_proc_t)ptr);
	ptr = getProc("glFogxvOES", userData); if(ptr) set_glFogxvOES((glFogxvOES_client_proc_t)ptr);
	ptr = getProc("glFrustumxOES", userData); if(ptr) set_glFrustumxOES((glFrustumxOES_client_proc_t)ptr);
	ptr = getProc("glGetClipPlanexOES", userData); if(ptr) set_glGetClipPlanexOES((glGetClipPlanexOES_client_proc_t)ptr);
	ptr = getProc("glGetClipPlanex", userData); if(ptr) set_glGetClipPlanex((glGetClipPlanex_client_proc_t)ptr);
	ptr = getProc("glGetFixedvOES", userData); if(ptr) set_glGetFixedvOES((glGetFixedvOES_client_proc_t)ptr);
	ptr = getProc("glGetLightxvOES", userData); if(ptr) set_glGetLightxvOES((glGetLightxvOES_client_proc_t)ptr);
	ptr = getProc("glGetMaterialxvOES", userData); if(ptr) set_glGetMaterialxvOES((glGetMaterialxvOES_client_proc_t)ptr);
	ptr = getProc("glGetTexEnvxvOES", userData); if(ptr) set_glGetTexEnvxvOES((glGetTexEnvxvOES_client_proc_t)ptr);
	ptr = getProc("glGetTexParameterxvOES", userData); if(ptr) set_glGetTexParameterxvOES((glGetTexParameterxvOES_client_proc_t)ptr);
	ptr = getProc("glLightModelxOES", userData); if(ptr) set_glLightModelxOES((glLightModelxOES_client_proc_t)ptr);
	ptr = getProc("glLightModelxvOES", userData); if(ptr) set_glLightModelxvOES((glLightModelxvOES_client_proc_t)ptr);
	ptr = getProc("glLightxOES", userData); if(ptr) set_glLightxOES((glLightxOES_client_proc_t)ptr);
	ptr = getProc("glLightxvOES", userData); if(ptr) set_glLightxvOES((glLightxvOES_client_proc_t)ptr);
	ptr = getProc("glLineWidthxOES", userData); if(ptr) set_glLineWidthxOES((glLineWidthxOES_client_proc_t)ptr);
	ptr = getProc("glLoadMatrixxOES", userData); if(ptr) set_glLoadMatrixxOES((glLoadMatrixxOES_client_proc_t)ptr);
	ptr = getProc("glMaterialxOES", userData); if(ptr) set_glMaterialxOES((glMaterialxOES_client_proc_t)ptr);
	ptr = getProc("glMaterialxvOES", userData); if(ptr) set_glMaterialxvOES((glMaterialxvOES_client_proc_t)ptr);
	ptr = getProc("glMultMatrixxOES", userData); if(ptr) set_glMultMatrixxOES((glMultMatrixxOES_client_proc_t)ptr);
	ptr = getProc("glMultiTexCoord4xOES", userData); if(ptr) set_glMultiTexCoord4xOES((glMultiTexCoord4xOES_client_proc_t)ptr);
	ptr = getProc("glNormal3xOES", userData); if(ptr) set_glNormal3xOES((glNormal3xOES_client_proc_t)ptr);
	ptr = getProc("glOrthoxOES", userData); if(ptr) set_glOrthoxOES((glOrthoxOES_client_proc_t)ptr);
	ptr = getProc("glPointParameterxOES", userData); if(ptr) set_glPointParameterxOES((glPointParameterxOES_client_proc_t)ptr);
	ptr = getProc("glPointParameterxvOES", userData); if(ptr) set_glPointParameterxvOES((glPointParameterxvOES_client_proc_t)ptr);
	ptr = getProc("glPointSizexOES", userData); if(ptr) set_glPointSizexOES((glPointSizexOES_client_proc_t)ptr);
	ptr = getProc("glPolygonOffsetxOES", userData); if(ptr) set_glPolygonOffsetxOES((glPolygonOffsetxOES_client_proc_t)ptr);
	ptr = getProc("glRotatexOES", userData); if(ptr) set_glRotatexOES((glRotatexOES_client_proc_t)ptr);
	ptr = getProc("glSampleCoveragexOES", userData); if(ptr) set_glSampleCoveragexOES((glSampleCoveragexOES_client_proc_t)ptr);
	ptr = getProc("glScalexOES", userData); if(ptr) set_glScalexOES((glScalexOES_client_proc_t)ptr);
	ptr = getProc("glTexEnvxOES", userData); if(ptr) set_glTexEnvxOES((glTexEnvxOES_client_proc_t)ptr);
	ptr = getProc("glTexEnvxvOES", userData); if(ptr) set_glTexEnvxvOES((glTexEnvxvOES_client_proc_t)ptr);
	ptr = getProc("glTexParameterxOES", userData); if(ptr) set_glTexParameterxOES((glTexParameterxOES_client_proc_t)ptr);
	ptr = getProc("glTexParameterxvOES", userData); if(ptr) set_glTexParameterxvOES((glTexParameterxvOES_client_proc_t)ptr);
	ptr = getProc("glTranslatexOES", userData); if(ptr) set_glTranslatexOES((glTranslatexOES_client_proc_t)ptr);
	ptr = getProc("glIsRenderbufferOES", userData); if(ptr) set_glIsRenderbufferOES((glIsRenderbufferOES_client_proc_t)ptr);
	ptr = getProc("glBindRenderbufferOES", userData); if(ptr) set_glBindRenderbufferOES((glBindRenderbufferOES_client_proc_t)ptr);
	ptr = getProc("glDeleteRenderbuffersOES", userData); if(ptr) set_glDeleteRenderbuffersOES((glDeleteRenderbuffersOES_client_proc_t)ptr);
	ptr = getProc("glGenRenderbuffersOES", userData); if(ptr) set_glGenRenderbuffersOES((glGenRenderbuffersOES_client_proc_t)ptr);
	ptr = getProc("glRenderbufferStorageOES", userData); if(ptr) set_glRenderbufferStorageOES((glRenderbufferStorageOES_client_proc_t)ptr);
	ptr = getProc("glGetRenderbufferParameterivOES", userData); if(ptr) set_glGetRenderbufferParameterivOES((glGetRenderbufferParameterivOES_client_proc_t)ptr);
	ptr = getProc("glIsFramebufferOES", userData); if(ptr) set_glIsFramebufferOES((glIsFramebufferOES_client_proc_t)ptr);
	ptr = getProc("glBindFramebufferOES", userData); if(ptr) set_glBindFramebufferOES((glBindFramebufferOES_client_proc_t)ptr);
	ptr = getProc("glDeleteFramebuffersOES", userData); if(ptr) set_glDeleteFramebuffersOES((glDeleteFramebuffersOES_client_proc_t)ptr);
	ptr = getProc("glGenFramebuffersOES", userData); if(ptr) set_glGenFramebuffersOES((glGenFramebuffersOES_client_proc_t)ptr);
	ptr = getProc("glCheckFramebufferStatusOES", userData); if(ptr) set_glCheckFramebufferStatusOES((glCheckFramebufferStatusOES_client_proc_t)ptr);
	ptr = getProc("glFramebufferRenderbufferOES", userData); if(ptr) set_glFramebufferRenderbufferOES((glFramebufferRenderbufferOES_client_proc_t)ptr);
	ptr = getProc("glFramebufferTexture2DOES", userData); if(ptr) set_glFramebufferTexture2DOES((glFramebufferTexture2DOES_client_proc_t)ptr);
	ptr = getProc("glGetFramebufferAttachmentParameterivOES", userData); if(ptr) set_glGetFramebufferAttachmentParameterivOES((glGetFramebufferAttachmentParameterivOES_client_proc_t)ptr);
	ptr = getProc("glGenerateMipmapOES", userData); if(ptr) set_glGenerateMipmapOES((glGenerateMipmapOES_client_proc_t)ptr);
	ptr = getProc("glGetBufferPointervOES", userData); if(ptr) set_glGetBufferPointervOES((glGetBufferPointervOES_client_proc_t)ptr);
	ptr = getProc("glCurrentPaletteMatrixOES", userData); if(ptr) set_glCurrentPaletteMatrixOES((glCurrentPaletteMatrixOES_client_proc_t)ptr);
	ptr = getProc("glLoadPaletteFromModelViewMatrixOES", userData); if(ptr) set_glLoadPaletteFromModelViewMatrixOES((glLoadPaletteFromModelViewMatrixOES_client_proc_t)ptr);
	ptr = getProc("glMatrixIndexPointerOES", userData); if(ptr) set_glMatrixIndexPointerOES((glMatrixIndexPointerOES_client_proc_t)ptr);
	ptr = getProc("glWeightPointerOES", userData); if(ptr) set_glWeightPointerOES((glWeightPointerOES_client_proc_t)ptr);
	ptr = getProc("glQueryMatrixxOES", userData); if(ptr) set_glQueryMatrixxOES((glQueryMatrixxOES_client_proc_t)ptr);
	ptr = getProc("glDepthRangefOES", userData); if(ptr) set_glDepthRangefOES((glDepthRangefOES_client_proc_t)ptr);
	ptr = getProc("glFrustumfOES", userData); if(ptr) set_glFrustumfOES((glFrustumfOES_client_proc_t)ptr);
	ptr = getProc("glOrthofOES", userData); if(ptr) set_glOrthofOES((glOrthofOES_client_proc_t)ptr);
	ptr = getProc("glClipPlanefOES", userData); if(ptr) set_glClipPlanefOES((glClipPlanefOES_client_proc_t)ptr);
	ptr = getProc("glClipPlanefIMG", userData); if(ptr) set_glClipPlanefIMG((glClipPlanefIMG_client_proc_t)ptr);
	ptr = getProc("glGetClipPlanefOES", userData); if(ptr) set_glGetClipPlanefOES((glGetClipPlanefOES_client_proc_t)ptr);
	ptr = getProc("glClearDepthfOES", userData); if(ptr) set_glClearDepthfOES((glClearDepthfOES_client_proc_t)ptr);
	ptr = getProc("glTexGenfOES", userData); if(ptr) set_glTexGenfOES((glTexGenfOES_client_proc_t)ptr);
	ptr = getProc("glTexGenfvOES", userData); if(ptr) set_glTexGenfvOES((glTexGenfvOES_client_proc_t)ptr);
	ptr = getProc("glTexGeniOES", userData); if(ptr) set_glTexGeniOES((glTexGeniOES_client_proc_t)ptr);
	ptr = getProc("glTexGenivOES", userData); if(ptr) set_glTexGenivOES((glTexGenivOES_client_proc_t)ptr);
	ptr = getProc("glTexGenxOES", userData); if(ptr) set_glTexGenxOES((glTexGenxOES_client_proc_t)ptr);
	ptr = getProc("glTexGenxvOES", userData); if(ptr) set_glTexGenxvOES((glTexGenxvOES_client_proc_t)ptr);
	ptr = getProc("glGetTexGenfvOES", userData); if(ptr) set_glGetTexGenfvOES((glGetTexGenfvOES_client_proc_t)ptr);
	ptr = getProc("glGetTexGenivOES", userData); if(ptr) set_glGetTexGenivOES((glGetTexGenivOES_client_proc_t)ptr);
	ptr = getProc("glGetTexGenxvOES", userData); if(ptr) set_glGetTexGenxvOES((glGetTexGenxvOES_client_proc_t)ptr);
	ptr = getProc("glMultiDrawArraysSUN", userData); if(ptr) set_glMultiDrawArraysSUN((glMultiDrawArraysSUN_client_proc_t)ptr);
	ptr = getProc("glMultiDrawElementsSUN", userData); if(ptr) set_glMultiDrawElementsSUN((glMultiDrawElementsSUN_client_proc_t)ptr);
	return 0;
}

