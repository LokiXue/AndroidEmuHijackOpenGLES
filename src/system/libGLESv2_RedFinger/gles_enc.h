// Generated Code - DO NOT EDIT !!
// generated by 'emugen'

#ifndef GUARD_gles_encoder_context_t
#define GUARD_gles_encoder_context_t

#include "IOStream.h"
#include "gles_client_context.h"


#include <string.h>
#include "glUtils.h"
#include "GLESEncoderUtils.h"

struct gles_encoder_context_t : public gles_client_context_t {

	IOStream *m_stream;

	gles_encoder_context_t(IOStream *stream);


};

extern "C" {
	void glActiveTexture_enc(void *self , GLenum texture);
	void glAttachShader_enc(void *self , GLuint program, GLuint shader);
	void glBindAttribLocation_enc(void *self , GLuint program, GLuint index, const GLchar* name);
	void glBindBuffer_enc(void *self , GLenum target, GLuint buffer);
	void glBindFramebuffer_enc(void *self , GLenum target, GLuint framebuffer);
	void glBindRenderbuffer_enc(void *self , GLenum target, GLuint renderbuffer);
	void glBindTexture_enc(void *self , GLenum target, GLuint texture);
	void glBlendColor_enc(void *self , GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
	void glBlendEquation_enc(void *self , GLenum mode);
	void glBlendEquationSeparate_enc(void *self , GLenum modeRGB, GLenum modeAlpha);
	void glBlendFunc_enc(void *self , GLenum sfactor, GLenum dfactor);
	void glBlendFuncSeparate_enc(void *self , GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
	void glBufferData_enc(void *self , GLenum target, GLsizeiptr size, const GLvoid* data, GLenum usage);
	void glBufferSubData_enc(void *self , GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid* data);
	GLenum glCheckFramebufferStatus_enc(void *self , GLenum target);
	void glClear_enc(void *self , GLbitfield mask);
	void glClearColor_enc(void *self , GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha);
	void glClearDepthf_enc(void *self , GLclampf depth);
	void glClearStencil_enc(void *self , GLint s);
	void glColorMask_enc(void *self , GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
	void glCompileShader_enc(void *self , GLuint shader);
	void glCompressedTexImage2D_enc(void *self , GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid* data);
	void glCompressedTexSubImage2D_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid* data);
	void glCopyTexImage2D_enc(void *self , GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);
	void glCopyTexSubImage2D_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	GLuint glCreateProgram_enc(void *self );
	GLuint glCreateShader_enc(void *self , GLenum type);
	void glCullFace_enc(void *self , GLenum mode);
	void glDeleteBuffers_enc(void *self , GLsizei n, const GLuint* buffers);
	void glDeleteFramebuffers_enc(void *self , GLsizei n, const GLuint* framebuffers);
	void glDeleteProgram_enc(void *self , GLuint program);
	void glDeleteRenderbuffers_enc(void *self , GLsizei n, const GLuint* renderbuffers);
	void glDeleteShader_enc(void *self , GLuint shader);
	void glDeleteTextures_enc(void *self , GLsizei n, const GLuint* textures);
	void glDepthFunc_enc(void *self , GLenum func);
	void glDepthMask_enc(void *self , GLboolean flag);
	void glDepthRangef_enc(void *self , GLclampf zNear, GLclampf zFar);
	void glDetachShader_enc(void *self , GLuint program, GLuint shader);
	void glDisable_enc(void *self , GLenum cap);
	void glDisableVertexAttribArray_enc(void *self , GLuint index);
	void glDrawArrays_enc(void *self , GLenum mode, GLint first, GLsizei count);
	void glDrawElements_enc(void *self , GLenum mode, GLsizei count, GLenum type, const GLvoid* indices);
	void glEnable_enc(void *self , GLenum cap);
	void glEnableVertexAttribArray_enc(void *self , GLuint index);
	void glFinish_enc(void *self );
	void glFlush_enc(void *self );
	void glFramebufferRenderbuffer_enc(void *self , GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void glFramebufferTexture2D_enc(void *self , GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void glFrontFace_enc(void *self , GLenum mode);
	void glGenBuffers_enc(void *self , GLsizei n, GLuint* buffers);
	void glGenerateMipmap_enc(void *self , GLenum target);
	void glGenFramebuffers_enc(void *self , GLsizei n, GLuint* framebuffers);
	void glGenRenderbuffers_enc(void *self , GLsizei n, GLuint* renderbuffers);
	void glGenTextures_enc(void *self , GLsizei n, GLuint* textures);
	void glGetActiveAttrib_enc(void *self , GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
	void glGetActiveUniform_enc(void *self , GLuint program, GLuint index, GLsizei bufsize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
	void glGetAttachedShaders_enc(void *self , GLuint program, GLsizei maxcount, GLsizei* count, GLuint* shaders);
	int glGetAttribLocation_enc(void *self , GLuint program, const GLchar* name);
	void glGetBooleanv_enc(void *self , GLenum pname, GLboolean* params);
	void glGetBufferParameteriv_enc(void *self , GLenum target, GLenum pname, GLint* params);
	GLenum glGetError_enc(void *self );
	void glGetFloatv_enc(void *self , GLenum pname, GLfloat* params);
	void glGetFramebufferAttachmentParameteriv_enc(void *self , GLenum target, GLenum attachment, GLenum pname, GLint* params);
	void glGetIntegerv_enc(void *self , GLenum pname, GLint* params);
	void glGetProgramiv_enc(void *self , GLuint program, GLenum pname, GLint* params);
	void glGetProgramInfoLog_enc(void *self , GLuint program, GLsizei bufsize, GLsizei* length, GLchar* infolog);
	void glGetRenderbufferParameteriv_enc(void *self , GLenum target, GLenum pname, GLint* params);
	void glGetShaderiv_enc(void *self , GLuint shader, GLenum pname, GLint* params);
	void glGetShaderInfoLog_enc(void *self , GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* infolog);
	void glGetShaderPrecisionFormat_enc(void *self , GLenum shadertype, GLenum precisiontype, GLint* range, GLint* precision);
	void glGetShaderSource_enc(void *self , GLuint shader, GLsizei bufsize, GLsizei* length, GLchar* source);
	const GLubyte* glGetString_enc(void *self , GLenum name);
	void glGetTexParameterfv_enc(void *self , GLenum target, GLenum pname, GLfloat* params);
	void glGetTexParameteriv_enc(void *self , GLenum target, GLenum pname, GLint* params);
	void glGetUniformfv_enc(void *self , GLuint program, GLint location, GLfloat* params);
	void glGetUniformiv_enc(void *self , GLuint program, GLint location, GLint* params);
	int glGetUniformLocation_enc(void *self , GLuint program, const GLchar* name);
	void glGetVertexAttribfv_enc(void *self , GLuint index, GLenum pname, GLfloat* params);
	void glGetVertexAttribiv_enc(void *self , GLuint index, GLenum pname, GLint* params);
	void glGetVertexAttribPointerv_enc(void *self , GLuint index, GLenum pname, GLvoid** pointer);
	void glHint_enc(void *self , GLenum target, GLenum mode);
	GLboolean glIsBuffer_enc(void *self , GLuint buffer);
	GLboolean glIsEnabled_enc(void *self , GLenum cap);
	GLboolean glIsFramebuffer_enc(void *self , GLuint framebuffer);
	GLboolean glIsProgram_enc(void *self , GLuint program);
	GLboolean glIsRenderbuffer_enc(void *self , GLuint renderbuffer);
	GLboolean glIsShader_enc(void *self , GLuint shader);
	GLboolean glIsTexture_enc(void *self , GLuint texture);
	void glLineWidth_enc(void *self , GLfloat width);
	void glLinkProgram_enc(void *self , GLuint program);
	void glPixelStorei_enc(void *self , GLenum pname, GLint param);
	void glPolygonOffset_enc(void *self , GLfloat factor, GLfloat units);
	void glReadPixels_enc(void *self , GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid* pixels);
	void glReleaseShaderCompiler_enc(void *self );
	void glRenderbufferStorage_enc(void *self , GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void glSampleCoverage_enc(void *self , GLclampf value, GLboolean invert);
	void glScissor_enc(void *self , GLint x, GLint y, GLsizei width, GLsizei height);
	void glShaderBinary_enc(void *self , GLsizei n, const GLuint* shaders, GLenum binaryformat, const GLvoid* binary, GLsizei length);
	void glShaderSource_enc(void *self , GLuint shader, GLsizei count, const GLchar*const* string, const GLint* length);
	void glStencilFunc_enc(void *self , GLenum func, GLint ref, GLuint mask);
	void glStencilFuncSeparate_enc(void *self , GLenum face, GLenum func, GLint ref, GLuint mask);
	void glStencilMask_enc(void *self , GLuint mask);
	void glStencilMaskSeparate_enc(void *self , GLenum face, GLuint mask);
	void glStencilOp_enc(void *self , GLenum fail, GLenum zfail, GLenum zpass);
	void glStencilOpSeparate_enc(void *self , GLenum face, GLenum fail, GLenum zfail, GLenum zpass);
	void glTexImage2D_enc(void *self , GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid* pixels);
	void glTexParameterf_enc(void *self , GLenum target, GLenum pname, GLfloat param);
	void glTexParameterfv_enc(void *self , GLenum target, GLenum pname, const GLfloat* params);
	void glTexParameteri_enc(void *self , GLenum target, GLenum pname, GLint param);
	void glTexParameteriv_enc(void *self , GLenum target, GLenum pname, const GLint* params);
	void glTexSubImage2D_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid* pixels);
	void glUniform1f_enc(void *self , GLint location, GLfloat x);
	void glUniform1fv_enc(void *self , GLint location, GLsizei count, const GLfloat* v);
	void glUniform1i_enc(void *self , GLint location, GLint x);
	void glUniform1iv_enc(void *self , GLint location, GLsizei count, const GLint* v);
	void glUniform2f_enc(void *self , GLint location, GLfloat x, GLfloat y);
	void glUniform2fv_enc(void *self , GLint location, GLsizei count, const GLfloat* v);
	void glUniform2i_enc(void *self , GLint location, GLint x, GLint y);
	void glUniform2iv_enc(void *self , GLint location, GLsizei count, const GLint* v);
	void glUniform3f_enc(void *self , GLint location, GLfloat x, GLfloat y, GLfloat z);
	void glUniform3fv_enc(void *self , GLint location, GLsizei count, const GLfloat* v);
	void glUniform3i_enc(void *self , GLint location, GLint x, GLint y, GLint z);
	void glUniform3iv_enc(void *self , GLint location, GLsizei count, const GLint* v);
	void glUniform4f_enc(void *self , GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void glUniform4fv_enc(void *self , GLint location, GLsizei count, const GLfloat* v);
	void glUniform4i_enc(void *self , GLint location, GLint x, GLint y, GLint z, GLint w);
	void glUniform4iv_enc(void *self , GLint location, GLsizei count, const GLint* v);
	void glUniformMatrix2fv_enc(void *self , GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glUniformMatrix3fv_enc(void *self , GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glUniformMatrix4fv_enc(void *self , GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glUseProgram_enc(void *self , GLuint program);
	void glValidateProgram_enc(void *self , GLuint program);
	void glVertexAttrib1f_enc(void *self , GLuint indx, GLfloat x);
	void glVertexAttrib1fv_enc(void *self , GLuint indx, const GLfloat* values);
	void glVertexAttrib2f_enc(void *self , GLuint indx, GLfloat x, GLfloat y);
	void glVertexAttrib2fv_enc(void *self , GLuint indx, const GLfloat* values);
	void glVertexAttrib3f_enc(void *self , GLuint indx, GLfloat x, GLfloat y, GLfloat z);
	void glVertexAttrib3fv_enc(void *self , GLuint indx, const GLfloat* values);
	void glVertexAttrib4f_enc(void *self , GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
	void glVertexAttrib4fv_enc(void *self , GLuint indx, const GLfloat* values);
	void glVertexAttribPointer_enc(void *self , GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid* ptr);
	void glViewport_enc(void *self , GLint x, GLint y, GLsizei width, GLsizei height);
	void glEGLImageTargetTexture2DOES_enc(void *self , GLenum target, GLeglImageOES image);
	void glEGLImageTargetRenderbufferStorageOES_enc(void *self , GLenum target, GLeglImageOES image);
	void glGetProgramBinaryOES_enc(void *self , GLuint program, GLsizei bufSize, GLsizei* length, GLenum* binaryFormat, GLvoid* binary);
	void glProgramBinaryOES_enc(void *self , GLuint program, GLenum binaryFormat, const GLvoid* binary, GLint length);
	void* glMapBufferOES_enc(void *self , GLenum target, GLenum access);
	GLboolean glUnmapBufferOES_enc(void *self , GLenum target);
	void glTexImage3DOES_enc(void *self , GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid* pixels);
	void glTexSubImage3DOES_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid* pixels);
	void glCopyTexSubImage3DOES_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	void glCompressedTexImage3DOES_enc(void *self , GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid* data);
	void glCompressedTexSubImage3DOES_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid* data);
	void glFramebufferTexture3DOES_enc(void *self , GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);
	void glBindVertexArrayOES_enc(void *self , GLuint array);
	void glDeleteVertexArraysOES_enc(void *self , GLsizei n, const GLuint* arrays);
	void glGenVertexArraysOES_enc(void *self , GLsizei n, GLuint* arrays);
	GLboolean glIsVertexArrayOES_enc(void *self , GLuint array);
	void glDiscardFramebufferEXT_enc(void *self , GLenum target, GLsizei numAttachments, const GLenum* attachments);
	void glMultiDrawArraysEXT_enc(void *self , GLenum mode, const GLint* first, const GLsizei* count, GLsizei primcount);
	void glMultiDrawElementsEXT_enc(void *self , GLenum mode, const GLsizei* count, GLenum type, const GLvoid*const* indices, GLsizei primcount);
	void glGetPerfMonitorGroupsAMD_enc(void *self , GLint* numGroups, GLsizei groupsSize, GLuint* groups);
	void glGetPerfMonitorCountersAMD_enc(void *self , GLuint group, GLint* numCounters, GLint* maxActiveCounters, GLsizei counterSize, GLuint* counters);
	void glGetPerfMonitorGroupStringAMD_enc(void *self , GLuint group, GLsizei bufSize, GLsizei* length, GLchar* groupString);
	void glGetPerfMonitorCounterStringAMD_enc(void *self , GLuint group, GLuint counter, GLsizei bufSize, GLsizei* length, GLchar* counterString);
	void glGetPerfMonitorCounterInfoAMD_enc(void *self , GLuint group, GLuint counter, GLenum pname, GLvoid* data);
	void glGenPerfMonitorsAMD_enc(void *self , GLsizei n, GLuint* monitors);
	void glDeletePerfMonitorsAMD_enc(void *self , GLsizei n, GLuint* monitors);
	void glSelectPerfMonitorCountersAMD_enc(void *self , GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint* countersList);
	void glBeginPerfMonitorAMD_enc(void *self , GLuint monitor);
	void glEndPerfMonitorAMD_enc(void *self , GLuint monitor);
	void glGetPerfMonitorCounterDataAMD_enc(void *self , GLuint monitor, GLenum pname, GLsizei dataSize, GLuint* data, GLint* bytesWritten);
	void glRenderbufferStorageMultisampleIMG_enc(void *self , GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void glFramebufferTexture2DMultisampleIMG_enc(void *self , GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLsizei samples);
	void glDeleteFencesNV_enc(void *self , GLsizei n, const GLuint* fences);
	void glGenFencesNV_enc(void *self , GLsizei n, GLuint* fences);
	GLboolean glIsFenceNV_enc(void *self , GLuint fence);
	GLboolean glTestFenceNV_enc(void *self , GLuint fence);
	void glGetFenceivNV_enc(void *self , GLuint fence, GLenum pname, GLint* params);
	void glFinishFenceNV_enc(void *self , GLuint fence);
	void glSetFenceNV_enc(void *self , GLuint fence, GLenum condition);
	void glCoverageMaskNV_enc(void *self , GLboolean mask);
	void glCoverageOperationNV_enc(void *self , GLenum operation);
	void glGetDriverControlsQCOM_enc(void *self , GLint* num, GLsizei size, GLuint* driverControls);
	void glGetDriverControlStringQCOM_enc(void *self , GLuint driverControl, GLsizei bufSize, GLsizei* length, GLchar* driverControlString);
	void glEnableDriverControlQCOM_enc(void *self , GLuint driverControl);
	void glDisableDriverControlQCOM_enc(void *self , GLuint driverControl);
	void glExtGetTexturesQCOM_enc(void *self , GLuint* textures, GLint maxTextures, GLint* numTextures);
	void glExtGetBuffersQCOM_enc(void *self , GLuint* buffers, GLint maxBuffers, GLint* numBuffers);
	void glExtGetRenderbuffersQCOM_enc(void *self , GLuint* renderbuffers, GLint maxRenderbuffers, GLint* numRenderbuffers);
	void glExtGetFramebuffersQCOM_enc(void *self , GLuint* framebuffers, GLint maxFramebuffers, GLint* numFramebuffers);
	void glExtGetTexLevelParameterivQCOM_enc(void *self , GLuint texture, GLenum face, GLint level, GLenum pname, GLint* params);
	void glExtTexObjectStateOverrideiQCOM_enc(void *self , GLenum target, GLenum pname, GLint param);
	void glExtGetTexSubImageQCOM_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLvoid* texels);
	void glExtGetBufferPointervQCOM_enc(void *self , GLenum target, GLvoidptr* params);
	void glExtGetShadersQCOM_enc(void *self , GLuint* shaders, GLint maxShaders, GLint* numShaders);
	void glExtGetProgramsQCOM_enc(void *self , GLuint* programs, GLint maxPrograms, GLint* numPrograms);
	GLboolean glExtIsProgramBinaryQCOM_enc(void *self , GLuint program);
	void glExtGetProgramBinarySourceQCOM_enc(void *self , GLuint program, GLenum shadertype, GLchar* source, GLint* length);
	void glStartTilingQCOM_enc(void *self , GLuint x, GLuint y, GLuint width, GLuint height, GLbitfield preserveMask);
	void glEndTilingQCOM_enc(void *self , GLbitfield preserveMask);
	void glVertexAttribPointerData_enc(void *self , GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, void* data, GLuint datalen);
	void glVertexAttribPointerOffset_enc(void *self , GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint offset);
	void glDrawElementsOffset_enc(void *self , GLenum mode, GLsizei count, GLenum type, GLuint offset);
	void glDrawElementsData_enc(void *self , GLenum mode, GLsizei count, GLenum type, void* data, GLuint datalen);
	void glGetCompressedTextureFormats_enc(void *self , int count, GLint* formats);
	void glShaderString_enc(void *self , GLuint shader, const GLchar* string, GLsizei len);
	int glFinishRoundTrip_enc(void *self );
	void glGenVertexArrays_enc(void *self , GLsizei n, GLuint* arrays);
	void glBindVertexArray_enc(void *self , GLuint array);
	void glDeleteVertexArrays_enc(void *self , GLsizei n, const GLuint* arrays);
	GLboolean glIsVertexArray_enc(void *self , GLuint array);
	void* glMapBufferRange_enc(void *self , GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);
	GLboolean glUnmapBuffer_enc(void *self , GLenum target);
	void glFlushMappedBufferRange_enc(void *self , GLenum target, GLintptr offset, GLsizeiptr length);
	void glMapBufferRangeAEMU_enc(void *self , GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access, void* mapped);
	void glUnmapBufferAEMU_enc(void *self , GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access, void* guest_buffer, GLboolean* out_res);
	void glFlushMappedBufferRangeAEMU_enc(void *self , GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access, void* guest_buffer);
	void glReadPixelsOffsetAEMU_enc(void *self , GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLuint offset);
	void glCompressedTexImage2DOffsetAEMU_enc(void *self , GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, GLuint offset);
	void glCompressedTexSubImage2DOffsetAEMU_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, GLuint offset);
	void glTexImage2DOffsetAEMU_enc(void *self , GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, GLuint offset);
	void glTexSubImage2DOffsetAEMU_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, GLuint offset);
	void glBindBufferRange_enc(void *self , GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);
	void glBindBufferBase_enc(void *self , GLenum target, GLuint index, GLuint buffer);
	void glCopyBufferSubData_enc(void *self , GLenum readtarget, GLenum writetarget, GLintptr readoffset, GLintptr writeoffset, GLsizeiptr size);
	void glClearBufferiv_enc(void *self , GLenum buffer, GLint drawBuffer, const GLint* value);
	void glClearBufferuiv_enc(void *self , GLenum buffer, GLint drawBuffer, const GLuint* value);
	void glClearBufferfv_enc(void *self , GLenum buffer, GLint drawBuffer, const GLfloat* value);
	void glClearBufferfi_enc(void *self , GLenum buffer, GLint drawBuffer, GLfloat depth, GLint stencil);
	void glGetBufferParameteri64v_enc(void *self , GLenum target, GLenum value, GLint64* data);
	void glGetBufferPointerv_enc(void *self , GLenum target, GLenum pname, GLvoid** params);
	void glUniformBlockBinding_enc(void *self , GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);
	GLuint glGetUniformBlockIndex_enc(void *self , GLuint program, const GLchar* uniformBlockName);
	void glGetUniformIndices_enc(void *self , GLuint program, GLsizei uniformCount, const GLchar** var3, GLuint* uniformIndices);
	void glGetUniformIndicesAEMU_enc(void *self , GLuint program, GLsizei uniformCount, const GLchar* packedUniformNames, GLsizei packedLen, GLuint* uniformIndices);
	void glGetActiveUniformBlockiv_enc(void *self , GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint* params);
	void glGetActiveUniformBlockName_enc(void *self , GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei* length, GLchar* uniformBlockName);
	void glUniform1ui_enc(void *self , GLint location, GLuint v0);
	void glUniform2ui_enc(void *self , GLint location, GLuint v0, GLuint v1);
	void glUniform3ui_enc(void *self , GLint location, GLuint v0, GLuint v1, GLuint v2);
	void glUniform4ui_enc(void *self , GLint location, GLint v0, GLuint v1, GLuint v2, GLuint v3);
	void glUniform1uiv_enc(void *self , GLint location, GLsizei count, const GLuint* value);
	void glUniform2uiv_enc(void *self , GLint location, GLsizei count, const GLuint* value);
	void glUniform3uiv_enc(void *self , GLint location, GLsizei count, const GLuint* value);
	void glUniform4uiv_enc(void *self , GLint location, GLsizei count, const GLuint* value);
	void glUniformMatrix2x3fv_enc(void *self , GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glUniformMatrix3x2fv_enc(void *self , GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glUniformMatrix2x4fv_enc(void *self , GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glUniformMatrix4x2fv_enc(void *self , GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glUniformMatrix3x4fv_enc(void *self , GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glUniformMatrix4x3fv_enc(void *self , GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glGetUniformuiv_enc(void *self , GLuint program, GLint location, GLuint* params);
	void glGetActiveUniformsiv_enc(void *self , GLuint program, GLsizei uniformCount, const GLuint* uniformIndices, GLenum pname, GLint* params);
	void glVertexAttribI4i_enc(void *self , GLuint index, GLint v0, GLint v1, GLint v2, GLint v3);
	void glVertexAttribI4ui_enc(void *self , GLuint index, GLuint v0, GLuint v1, GLuint v2, GLuint v3);
	void glVertexAttribI4iv_enc(void *self , GLuint index, const GLint* v);
	void glVertexAttribI4uiv_enc(void *self , GLuint index, const GLuint* v);
	void glVertexAttribIPointer_enc(void *self , GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
	void glVertexAttribIPointerOffsetAEMU_enc(void *self , GLuint index, GLint size, GLenum type, GLsizei stride, GLuint offset);
	void glVertexAttribIPointerDataAEMU_enc(void *self , GLuint index, GLint size, GLenum type, GLsizei stride, void* data, GLuint datalen);
	void glGetVertexAttribIiv_enc(void *self , GLuint index, GLenum pname, GLint* params);
	void glGetVertexAttribIuiv_enc(void *self , GLuint index, GLenum pname, GLuint* params);
	void glVertexAttribDivisor_enc(void *self , GLuint index, GLuint divisor);
	void glDrawArraysInstanced_enc(void *self , GLenum mode, GLint first, GLsizei count, GLsizei primcount);
	void glDrawElementsInstanced_enc(void *self , GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei primcount);
	void glDrawElementsInstancedDataAEMU_enc(void *self , GLenum mode, GLsizei count, GLenum type, const void* indices, GLsizei primcount, GLsizei datalen);
	void glDrawElementsInstancedOffsetAEMU_enc(void *self , GLenum mode, GLsizei count, GLenum type, GLuint offset, GLsizei primcount);
	void glDrawRangeElements_enc(void *self , GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid* indices);
	void glDrawRangeElementsDataAEMU_enc(void *self , GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid* indices, GLsizei datalen);
	void glDrawRangeElementsOffsetAEMU_enc(void *self , GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLuint offset);
	GLsync glFenceSync_enc(void *self , GLenum condition, GLbitfield flags);
	GLenum glClientWaitSync_enc(void *self , GLsync wait_on, GLbitfield flags, GLuint64 timeout);
	void glWaitSync_enc(void *self , GLsync wait_on, GLbitfield flags, GLuint64 timeout);
	void glDeleteSync_enc(void *self , GLsync to_delete);
	GLboolean glIsSync_enc(void *self , GLsync sync);
	void glGetSynciv_enc(void *self , GLsync sync, GLenum pname, GLsizei bufSize, GLsizei* length, GLint* values);
	uint64_t glFenceSyncAEMU_enc(void *self , GLenum condition, GLbitfield flags);
	GLenum glClientWaitSyncAEMU_enc(void *self , uint64_t wait_on, GLbitfield flags, GLuint64 timeout);
	void glWaitSyncAEMU_enc(void *self , uint64_t wait_on, GLbitfield flags, GLuint64 timeout);
	void glDeleteSyncAEMU_enc(void *self , uint64_t to_delete);
	GLboolean glIsSyncAEMU_enc(void *self , uint64_t sync);
	void glGetSyncivAEMU_enc(void *self , uint64_t sync, GLenum pname, GLsizei bufSize, GLsizei* length, GLint* values);
	void glDrawBuffers_enc(void *self , GLsizei n, const GLenum* bufs);
	void glReadBuffer_enc(void *self , GLenum src);
	void glBlitFramebuffer_enc(void *self , GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
	void glInvalidateFramebuffer_enc(void *self , GLenum target, GLsizei numAttachments, const GLenum* attachments);
	void glInvalidateSubFramebuffer_enc(void *self , GLenum target, GLsizei numAttachments, const GLenum* attachments, GLint x, GLint y, GLsizei width, GLsizei height);
	void glFramebufferTextureLayer_enc(void *self , GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);
	void glRenderbufferStorageMultisample_enc(void *self , GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);
	void glTexStorage2D_enc(void *self , GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);
	void glGetInternalformativ_enc(void *self , GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint* params);
	void glBeginTransformFeedback_enc(void *self , GLenum primitiveMode);
	void glEndTransformFeedback_enc(void *self );
	void glGenTransformFeedbacks_enc(void *self , GLsizei n, GLuint* ids);
	void glDeleteTransformFeedbacks_enc(void *self , GLsizei n, const GLuint* ids);
	void glBindTransformFeedback_enc(void *self , GLenum target, GLuint id);
	void glPauseTransformFeedback_enc(void *self );
	void glResumeTransformFeedback_enc(void *self );
	GLboolean glIsTransformFeedback_enc(void *self , GLuint id);
	void glTransformFeedbackVaryings_enc(void *self , GLuint program, GLsizei count, const char** var3, GLenum bufferMode);
	void glTransformFeedbackVaryingsAEMU_enc(void *self , GLuint program, GLsizei count, const char* packedVaryings, GLuint packedVaryingsLen, GLenum bufferMode);
	void glGetTransformFeedbackVarying_enc(void *self , GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLsizei* size, GLenum* type, char* name);
	void glGenSamplers_enc(void *self , GLsizei n, GLuint* samplers);
	void glDeleteSamplers_enc(void *self , GLsizei n, const GLuint* samplers);
	void glBindSampler_enc(void *self , GLuint unit, GLuint sampler);
	void glSamplerParameterf_enc(void *self , GLuint sampler, GLenum pname, GLfloat param);
	void glSamplerParameteri_enc(void *self , GLuint sampler, GLenum pname, GLint param);
	void glSamplerParameterfv_enc(void *self , GLuint sampler, GLenum pname, const GLfloat* params);
	void glSamplerParameteriv_enc(void *self , GLuint sampler, GLenum pname, const GLint* params);
	void glGetSamplerParameterfv_enc(void *self , GLuint sampler, GLenum pname, GLfloat* params);
	void glGetSamplerParameteriv_enc(void *self , GLuint sampler, GLenum pname, GLint* params);
	GLboolean glIsSampler_enc(void *self , GLuint sampler);
	void glGenQueries_enc(void *self , GLsizei n, GLuint* queries);
	void glDeleteQueries_enc(void *self , GLsizei n, const GLuint* queries);
	void glBeginQuery_enc(void *self , GLenum target, GLuint query);
	void glEndQuery_enc(void *self , GLenum target);
	void glGetQueryiv_enc(void *self , GLenum target, GLenum pname, GLint* params);
	void glGetQueryObjectuiv_enc(void *self , GLuint query, GLenum pname, GLuint* params);
	GLboolean glIsQuery_enc(void *self , GLuint query);
	void glProgramParameteri_enc(void *self , GLuint program, GLenum pname, GLint value);
	void glProgramBinary_enc(void *self , GLuint program, GLenum binaryFormat, const void* binary, GLsizei length);
	void glGetProgramBinary_enc(void *self , GLuint program, GLsizei bufSize, GLsizei* length, GLenum* binaryFormat, void* binary);
	GLint glGetFragDataLocation_enc(void *self , GLuint program, const char* name);
	void glGetInteger64v_enc(void *self , GLenum pname, GLint64* data);
	void glGetIntegeri_v_enc(void *self , GLenum target, GLuint index, GLint* data);
	void glGetInteger64i_v_enc(void *self , GLenum target, GLuint index, GLint64* data);
	void glTexImage3D_enc(void *self , GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid* data);
	void glTexImage3DOffsetAEMU_enc(void *self , GLenum target, GLint level, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, GLuint offset);
	void glTexStorage3D_enc(void *self , GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);
	void glTexSubImage3D_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid* data);
	void glTexSubImage3DOffsetAEMU_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, GLuint offset);
	void glCompressedTexImage3D_enc(void *self , GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid* data);
	void glCompressedTexImage3DOffsetAEMU_enc(void *self , GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, GLuint offset);
	void glCompressedTexSubImage3D_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid* data);
	void glCompressedTexSubImage3DOffsetAEMU_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, GLuint data);
	void glCopyTexSubImage3D_enc(void *self , GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);
	const GLubyte* glGetStringi_enc(void *self , GLenum name, GLuint index);
	void glGetBooleani_v_enc(void *self , GLenum target, GLuint index, GLboolean* data);
	void glMemoryBarrier_enc(void *self , GLbitfield barriers);
	void glMemoryBarrierByRegion_enc(void *self , GLbitfield barriers);
	void glGenProgramPipelines_enc(void *self , GLsizei n, GLuint* pipelines);
	void glDeleteProgramPipelines_enc(void *self , GLsizei n, const GLuint* pipelines);
	void glBindProgramPipeline_enc(void *self , GLuint pipeline);
	void glGetProgramPipelineiv_enc(void *self , GLuint pipeline, GLenum pname, GLint* params);
	void glGetProgramPipelineInfoLog_enc(void *self , GLuint pipeline, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
	void glValidateProgramPipeline_enc(void *self , GLuint pipeline);
	GLboolean glIsProgramPipeline_enc(void *self , GLuint pipeline);
	void glUseProgramStages_enc(void *self , GLuint pipeline, GLbitfield stages, GLuint program);
	void glActiveShaderProgram_enc(void *self , GLuint pipeline, GLuint program);
	GLuint glCreateShaderProgramv_enc(void *self , GLenum type, GLsizei count, const char** var3);
	GLuint glCreateShaderProgramvAEMU_enc(void *self , GLenum type, GLsizei count, const char* packedStrings, GLuint packedLen);
	void glProgramUniform1f_enc(void *self , GLuint program, GLint location, GLfloat v0);
	void glProgramUniform2f_enc(void *self , GLuint program, GLint location, GLfloat v0, GLfloat v1);
	void glProgramUniform3f_enc(void *self , GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
	void glProgramUniform4f_enc(void *self , GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
	void glProgramUniform1i_enc(void *self , GLuint program, GLint location, GLint v0);
	void glProgramUniform2i_enc(void *self , GLuint program, GLint location, GLint v0, GLint v1);
	void glProgramUniform3i_enc(void *self , GLuint program, GLint location, GLint v0, GLint v1, GLint v2);
	void glProgramUniform4i_enc(void *self , GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
	void glProgramUniform1ui_enc(void *self , GLuint program, GLint location, GLuint v0);
	void glProgramUniform2ui_enc(void *self , GLuint program, GLint location, GLint v0, GLuint v1);
	void glProgramUniform3ui_enc(void *self , GLuint program, GLint location, GLint v0, GLint v1, GLuint v2);
	void glProgramUniform4ui_enc(void *self , GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLuint v3);
	void glProgramUniform1fv_enc(void *self , GLuint program, GLint location, GLsizei count, const GLfloat* value);
	void glProgramUniform2fv_enc(void *self , GLuint program, GLint location, GLsizei count, const GLfloat* value);
	void glProgramUniform3fv_enc(void *self , GLuint program, GLint location, GLsizei count, const GLfloat* value);
	void glProgramUniform4fv_enc(void *self , GLuint program, GLint location, GLsizei count, const GLfloat* value);
	void glProgramUniform1iv_enc(void *self , GLuint program, GLint location, GLsizei count, const GLint* value);
	void glProgramUniform2iv_enc(void *self , GLuint program, GLint location, GLsizei count, const GLint* value);
	void glProgramUniform3iv_enc(void *self , GLuint program, GLint location, GLsizei count, const GLint* value);
	void glProgramUniform4iv_enc(void *self , GLuint program, GLint location, GLsizei count, const GLint* value);
	void glProgramUniform1uiv_enc(void *self , GLuint program, GLint location, GLsizei count, const GLuint* value);
	void glProgramUniform2uiv_enc(void *self , GLuint program, GLint location, GLsizei count, const GLuint* value);
	void glProgramUniform3uiv_enc(void *self , GLuint program, GLint location, GLsizei count, const GLuint* value);
	void glProgramUniform4uiv_enc(void *self , GLuint program, GLint location, GLsizei count, const GLuint* value);
	void glProgramUniformMatrix2fv_enc(void *self , GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix3fv_enc(void *self , GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix4fv_enc(void *self , GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix2x3fv_enc(void *self , GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix3x2fv_enc(void *self , GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix2x4fv_enc(void *self , GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix4x2fv_enc(void *self , GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix3x4fv_enc(void *self , GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glProgramUniformMatrix4x3fv_enc(void *self , GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
	void glGetProgramInterfaceiv_enc(void *self , GLuint program, GLenum programInterface, GLenum pname, GLint* params);
	void glGetProgramResourceiv_enc(void *self , GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum* props, GLsizei bufSize, GLsizei* length, GLint* params);
	GLuint glGetProgramResourceIndex_enc(void *self , GLuint program, GLenum programInterface, const char* name);
	GLint glGetProgramResourceLocation_enc(void *self , GLuint program, GLenum programInterface, const char* name);
	void glGetProgramResourceName_enc(void *self , GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei* length, char* name);
	void glBindImageTexture_enc(void *self , GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);
	void glDispatchCompute_enc(void *self , GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);
	void glDispatchComputeIndirect_enc(void *self , GLintptr indirect);
	void glBindVertexBuffer_enc(void *self , GLuint bindingindex, GLuint buffer, GLintptr offset, GLintptr stride);
	void glVertexAttribBinding_enc(void *self , GLuint attribindex, GLuint bindingindex);
	void glVertexAttribFormat_enc(void *self , GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);
	void glVertexAttribIFormat_enc(void *self , GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);
	void glVertexBindingDivisor_enc(void *self , GLuint bindingindex, GLuint divisor);
	void glDrawArraysIndirect_enc(void *self , GLenum mode, const void* indirect);
	void glDrawArraysIndirectDataAEMU_enc(void *self , GLenum mode, const void* indirect, GLuint datalen);
	void glDrawArraysIndirectOffsetAEMU_enc(void *self , GLenum mode, GLuint offset);
	void glDrawElementsIndirect_enc(void *self , GLenum mode, GLenum type, const void* indirect);
	void glDrawElementsIndirectDataAEMU_enc(void *self , GLenum mode, GLenum type, const void* indirect, GLuint datalen);
	void glDrawElementsIndirectOffsetAEMU_enc(void *self , GLenum mode, GLenum type, GLuint offset);
	void glTexStorage2DMultisample_enc(void *self , GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);
	void glSampleMaski_enc(void *self , GLuint maskNumber, GLbitfield mask);
	void glGetMultisamplefv_enc(void *self , GLenum pname, GLuint index, GLfloat* val);
	void glFramebufferParameteri_enc(void *self , GLenum target, GLenum pname, GLint param);
	void glGetFramebufferParameteriv_enc(void *self , GLenum target, GLenum pname, GLint* params);
	void glGetTexLevelParameterfv_enc(void *self , GLenum target, GLint level, GLenum pname, GLfloat* params);
	void glGetTexLevelParameteriv_enc(void *self , GLenum target, GLint level, GLenum pname, GLint* params);
	void glAlphaFunc_enc(void *self , GLenum func, GLclampf ref);
	void glClipPlanef_enc(void *self , GLenum plane, const GLfloat* equation);
	void glColor4f_enc(void *self , GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
	void glFogf_enc(void *self , GLenum pname, GLfloat param);
	void glFogfv_enc(void *self , GLenum pname, const GLfloat* params);
	void glFrustumf_enc(void *self , GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
	void glGetClipPlanef_enc(void *self , GLenum pname, GLfloat* eqn);
	void glGetLightfv_enc(void *self , GLenum light, GLenum pname, GLfloat* params);
	void glGetMaterialfv_enc(void *self , GLenum face, GLenum pname, GLfloat* params);
	void glGetTexEnvfv_enc(void *self , GLenum env, GLenum pname, GLfloat* params);
	void glLightModelf_enc(void *self , GLenum pname, GLfloat param);
	void glLightModelfv_enc(void *self , GLenum pname, const GLfloat* params);
	void glLightf_enc(void *self , GLenum light, GLenum pname, GLfloat param);
	void glLightfv_enc(void *self , GLenum light, GLenum pname, const GLfloat* params);
	void glLoadMatrixf_enc(void *self , const GLfloat* m);
	void glMaterialf_enc(void *self , GLenum face, GLenum pname, GLfloat param);
	void glMaterialfv_enc(void *self , GLenum face, GLenum pname, const GLfloat* params);
	void glMultMatrixf_enc(void *self , const GLfloat* m);
	void glMultiTexCoord4f_enc(void *self , GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q);
	void glNormal3f_enc(void *self , GLfloat nx, GLfloat ny, GLfloat nz);
	void glOrthof_enc(void *self , GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
	void glPointParameterf_enc(void *self , GLenum pname, GLfloat param);
	void glPointParameterfv_enc(void *self , GLenum pname, const GLfloat* params);
	void glPointSize_enc(void *self , GLfloat size);
	void glRotatef_enc(void *self , GLfloat angle, GLfloat x, GLfloat y, GLfloat z);
	void glScalef_enc(void *self , GLfloat x, GLfloat y, GLfloat z);
	void glTexEnvf_enc(void *self , GLenum target, GLenum pname, GLfloat param);
	void glTexEnvfv_enc(void *self , GLenum target, GLenum pname, const GLfloat* params);
	void glTranslatef_enc(void *self , GLfloat x, GLfloat y, GLfloat z);
	void glAlphaFuncx_enc(void *self , GLenum func, GLclampx ref);
	void glClearColorx_enc(void *self , GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha);
	void glClearDepthx_enc(void *self , GLclampx depth);
	void glClientActiveTexture_enc(void *self , GLenum texture);
	void glColor4ub_enc(void *self , GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha);
	void glColor4x_enc(void *self , GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
	void glColorPointer_enc(void *self , GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
	void glDepthRangex_enc(void *self , GLclampx zNear, GLclampx zFar);
	void glDisableClientState_enc(void *self , GLenum array);
	void glEnableClientState_enc(void *self , GLenum array);
	void glFogx_enc(void *self , GLenum pname, GLfixed param);
	void glFogxv_enc(void *self , GLenum pname, const GLfixed* params);
	void glFrustumx_enc(void *self , GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);
	void glClipPlanex_enc(void *self , GLenum pname, const GLfixed* eqn);
	void glGetFixedv_enc(void *self , GLenum pname, GLfixed* params);
	void glGetLightxv_enc(void *self , GLenum light, GLenum pname, GLfixed* params);
	void glGetMaterialxv_enc(void *self , GLenum face, GLenum pname, GLfixed* params);
	void glGetPointerv_enc(void *self , GLenum pname, GLvoid** params);
	void glGetTexEnviv_enc(void *self , GLenum env, GLenum pname, GLint* params);
	void glGetTexEnvxv_enc(void *self , GLenum env, GLenum pname, GLfixed* params);
	void glGetTexParameterxv_enc(void *self , GLenum target, GLenum pname, GLfixed* params);
	void glLightModelx_enc(void *self , GLenum pname, GLfixed param);
	void glLightModelxv_enc(void *self , GLenum pname, const GLfixed* params);
	void glLightx_enc(void *self , GLenum light, GLenum pname, GLfixed param);
	void glLightxv_enc(void *self , GLenum light, GLenum pname, const GLfixed* params);
	void glLineWidthx_enc(void *self , GLfixed width);
	void glLoadIdentity_enc(void *self );
	void glLoadMatrixx_enc(void *self , const GLfixed* m);
	void glLogicOp_enc(void *self , GLenum opcode);
	void glMaterialx_enc(void *self , GLenum face, GLenum pname, GLfixed param);
	void glMaterialxv_enc(void *self , GLenum face, GLenum pname, const GLfixed* params);
	void glMatrixMode_enc(void *self , GLenum mode);
	void glMultMatrixx_enc(void *self , const GLfixed* m);
	void glMultiTexCoord4x_enc(void *self , GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
	void glNormal3x_enc(void *self , GLfixed nx, GLfixed ny, GLfixed nz);
	void glNormalPointer_enc(void *self , GLenum type, GLsizei stride, const GLvoid* pointer);
	void glOrthox_enc(void *self , GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);
	void glPointParameterx_enc(void *self , GLenum pname, GLfixed param);
	void glPointParameterxv_enc(void *self , GLenum pname, const GLfixed* params);
	void glPointSizex_enc(void *self , GLfixed size);
	void glPolygonOffsetx_enc(void *self , GLfixed factor, GLfixed units);
	void glPopMatrix_enc(void *self );
	void glPushMatrix_enc(void *self );
	void glRotatex_enc(void *self , GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
	void glSampleCoveragex_enc(void *self , GLclampx value, GLboolean invert);
	void glScalex_enc(void *self , GLfixed x, GLfixed y, GLfixed z);
	void glShadeModel_enc(void *self , GLenum mode);
	void glTexCoordPointer_enc(void *self , GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
	void glTexEnvi_enc(void *self , GLenum target, GLenum pname, GLint param);
	void glTexEnvx_enc(void *self , GLenum target, GLenum pname, GLfixed param);
	void glTexEnviv_enc(void *self , GLenum target, GLenum pname, const GLint* params);
	void glTexEnvxv_enc(void *self , GLenum target, GLenum pname, const GLfixed* params);
	void glTexParameterx_enc(void *self , GLenum target, GLenum pname, GLfixed param);
	void glTexParameterxv_enc(void *self , GLenum target, GLenum pname, const GLfixed* params);
	void glTranslatex_enc(void *self , GLfixed x, GLfixed y, GLfixed z);
	void glVertexPointer_enc(void *self , GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
	void glPointSizePointerOES_enc(void *self , GLenum type, GLsizei stride, const GLvoid* pointer);
	void glVertexPointerOffset_enc(void *self , GLint size, GLenum type, GLsizei stride, GLuint offset);
	void glColorPointerOffset_enc(void *self , GLint size, GLenum type, GLsizei stride, GLuint offset);
	void glNormalPointerOffset_enc(void *self , GLenum type, GLsizei stride, GLuint offset);
	void glPointSizePointerOffset_enc(void *self , GLenum type, GLsizei stride, GLuint offset);
	void glTexCoordPointerOffset_enc(void *self , GLint size, GLenum type, GLsizei stride, GLuint offset);
	void glWeightPointerOffset_enc(void *self , GLint size, GLenum type, GLsizei stride, GLuint offset);
	void glMatrixIndexPointerOffset_enc(void *self , GLint size, GLenum type, GLsizei stride, GLuint offset);
	void glVertexPointerData_enc(void *self , GLint size, GLenum type, GLsizei stride, void* data, GLuint datalen);
	void glColorPointerData_enc(void *self , GLint size, GLenum type, GLsizei stride, void* data, GLuint datalen);
	void glNormalPointerData_enc(void *self , GLenum type, GLsizei stride, void* data, GLuint datalen);
	void glTexCoordPointerData_enc(void *self , GLint unit, GLint size, GLenum type, GLsizei stride, void* data, GLuint datalen);
	void glPointSizePointerData_enc(void *self , GLenum type, GLsizei stride, void* data, GLuint datalen);
	void glWeightPointerData_enc(void *self , GLint size, GLenum type, GLsizei stride, void* data, GLuint datalen);
	void glMatrixIndexPointerData_enc(void *self , GLint size, GLenum type, GLsizei stride, void* data, GLuint datalen);
	void glBlendEquationSeparateOES_enc(void *self , GLenum modeRGB, GLenum modeAlpha);
	void glBlendFuncSeparateOES_enc(void *self , GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);
	void glBlendEquationOES_enc(void *self , GLenum mode);
	void glDrawTexsOES_enc(void *self , GLshort x, GLshort y, GLshort z, GLshort width, GLshort height);
	void glDrawTexiOES_enc(void *self , GLint x, GLint y, GLint z, GLint width, GLint height);
	void glDrawTexxOES_enc(void *self , GLfixed x, GLfixed y, GLfixed z, GLfixed width, GLfixed height);
	void glDrawTexsvOES_enc(void *self , const GLshort* coords);
	void glDrawTexivOES_enc(void *self , const GLint* coords);
	void glDrawTexxvOES_enc(void *self , const GLfixed* coords);
	void glDrawTexfOES_enc(void *self , GLfloat x, GLfloat y, GLfloat z, GLfloat width, GLfloat height);
	void glDrawTexfvOES_enc(void *self , const GLfloat* coords);
	void glAlphaFuncxOES_enc(void *self , GLenum func, GLclampx ref);
	void glClearColorxOES_enc(void *self , GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha);
	void glClearDepthxOES_enc(void *self , GLclampx depth);
	void glClipPlanexOES_enc(void *self , GLenum plane, const GLfixed* equation);
	void glClipPlanexIMG_enc(void *self , GLenum plane, const GLfixed* equation);
	void glColor4xOES_enc(void *self , GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha);
	void glDepthRangexOES_enc(void *self , GLclampx zNear, GLclampx zFar);
	void glFogxOES_enc(void *self , GLenum pname, GLfixed param);
	void glFogxvOES_enc(void *self , GLenum pname, const GLfixed* params);
	void glFrustumxOES_enc(void *self , GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);
	void glGetClipPlanexOES_enc(void *self , GLenum pname, GLfixed* eqn);
	void glGetClipPlanex_enc(void *self , GLenum pname, GLfixed* eqn);
	void glGetFixedvOES_enc(void *self , GLenum pname, GLfixed* params);
	void glGetLightxvOES_enc(void *self , GLenum light, GLenum pname, GLfixed* params);
	void glGetMaterialxvOES_enc(void *self , GLenum face, GLenum pname, GLfixed* params);
	void glGetTexEnvxvOES_enc(void *self , GLenum env, GLenum pname, GLfixed* params);
	void glGetTexParameterxvOES_enc(void *self , GLenum target, GLenum pname, GLfixed* params);
	void glLightModelxOES_enc(void *self , GLenum pname, GLfixed param);
	void glLightModelxvOES_enc(void *self , GLenum pname, const GLfixed* params);
	void glLightxOES_enc(void *self , GLenum light, GLenum pname, GLfixed param);
	void glLightxvOES_enc(void *self , GLenum light, GLenum pname, const GLfixed* params);
	void glLineWidthxOES_enc(void *self , GLfixed width);
	void glLoadMatrixxOES_enc(void *self , const GLfixed* m);
	void glMaterialxOES_enc(void *self , GLenum face, GLenum pname, GLfixed param);
	void glMaterialxvOES_enc(void *self , GLenum face, GLenum pname, const GLfixed* params);
	void glMultMatrixxOES_enc(void *self , const GLfixed* m);
	void glMultiTexCoord4xOES_enc(void *self , GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q);
	void glNormal3xOES_enc(void *self , GLfixed nx, GLfixed ny, GLfixed nz);
	void glOrthoxOES_enc(void *self , GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar);
	void glPointParameterxOES_enc(void *self , GLenum pname, GLfixed param);
	void glPointParameterxvOES_enc(void *self , GLenum pname, const GLfixed* params);
	void glPointSizexOES_enc(void *self , GLfixed size);
	void glPolygonOffsetxOES_enc(void *self , GLfixed factor, GLfixed units);
	void glRotatexOES_enc(void *self , GLfixed angle, GLfixed x, GLfixed y, GLfixed z);
	void glSampleCoveragexOES_enc(void *self , GLclampx value, GLboolean invert);
	void glScalexOES_enc(void *self , GLfixed x, GLfixed y, GLfixed z);
	void glTexEnvxOES_enc(void *self , GLenum target, GLenum pname, GLfixed param);
	void glTexEnvxvOES_enc(void *self , GLenum target, GLenum pname, const GLfixed* params);
	void glTexParameterxOES_enc(void *self , GLenum target, GLenum pname, GLfixed param);
	void glTexParameterxvOES_enc(void *self , GLenum target, GLenum pname, const GLfixed* params);
	void glTranslatexOES_enc(void *self , GLfixed x, GLfixed y, GLfixed z);
	GLboolean glIsRenderbufferOES_enc(void *self , GLuint renderbuffer);
	void glBindRenderbufferOES_enc(void *self , GLenum target, GLuint renderbuffer);
	void glDeleteRenderbuffersOES_enc(void *self , GLsizei n, const GLuint* renderbuffers);
	void glGenRenderbuffersOES_enc(void *self , GLsizei n, GLuint* renderbuffers);
	void glRenderbufferStorageOES_enc(void *self , GLenum target, GLenum internalformat, GLsizei width, GLsizei height);
	void glGetRenderbufferParameterivOES_enc(void *self , GLenum target, GLenum pname, GLint* params);
	GLboolean glIsFramebufferOES_enc(void *self , GLuint framebuffer);
	void glBindFramebufferOES_enc(void *self , GLenum target, GLuint framebuffer);
	void glDeleteFramebuffersOES_enc(void *self , GLsizei n, const GLuint* framebuffers);
	void glGenFramebuffersOES_enc(void *self , GLsizei n, GLuint* framebuffers);
	GLenum glCheckFramebufferStatusOES_enc(void *self , GLenum target);
	void glFramebufferRenderbufferOES_enc(void *self , GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);
	void glFramebufferTexture2DOES_enc(void *self , GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);
	void glGetFramebufferAttachmentParameterivOES_enc(void *self , GLenum target, GLenum attachment, GLenum pname, GLint* params);
	void glGenerateMipmapOES_enc(void *self , GLenum target);
	void glGetBufferPointervOES_enc(void *self , GLenum target, GLenum pname, GLvoid** params);
	void glCurrentPaletteMatrixOES_enc(void *self , GLuint matrixpaletteindex);
	void glLoadPaletteFromModelViewMatrixOES_enc(void *self );
	void glMatrixIndexPointerOES_enc(void *self , GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
	void glWeightPointerOES_enc(void *self , GLint size, GLenum type, GLsizei stride, const GLvoid* pointer);
	GLbitfield glQueryMatrixxOES_enc(void *self , GLfixed* mantissa, GLint* exponent);
	void glDepthRangefOES_enc(void *self , GLclampf zNear, GLclampf zFar);
	void glFrustumfOES_enc(void *self , GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
	void glOrthofOES_enc(void *self , GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar);
	void glClipPlanefOES_enc(void *self , GLenum plane, const GLfloat* equation);
	void glClipPlanefIMG_enc(void *self , GLenum plane, const GLfloat* equation);
	void glGetClipPlanefOES_enc(void *self , GLenum pname, GLfloat* eqn);
	void glClearDepthfOES_enc(void *self , GLclampf depth);
	void glTexGenfOES_enc(void *self , GLenum coord, GLenum pname, GLfloat param);
	void glTexGenfvOES_enc(void *self , GLenum coord, GLenum pname, const GLfloat* params);
	void glTexGeniOES_enc(void *self , GLenum coord, GLenum pname, GLint param);
	void glTexGenivOES_enc(void *self , GLenum coord, GLenum pname, const GLint* params);
	void glTexGenxOES_enc(void *self , GLenum coord, GLenum pname, GLfixed param);
	void glTexGenxvOES_enc(void *self , GLenum coord, GLenum pname, const GLfixed* params);
	void glGetTexGenfvOES_enc(void *self , GLenum coord, GLenum pname, GLfloat* params);
	void glGetTexGenivOES_enc(void *self , GLenum coord, GLenum pname, GLint* params);
	void glGetTexGenxvOES_enc(void *self , GLenum coord, GLenum pname, GLfixed* params);
	void glMultiDrawArraysSUN_enc(void *self , GLenum mode, GLint* first, GLsizei* count, GLsizei primcount);
	void glMultiDrawElementsSUN_enc(void *self , GLenum mode, const GLsizei* count, GLenum type, const GLvoid** indices, GLsizei primcount);
};
#endif